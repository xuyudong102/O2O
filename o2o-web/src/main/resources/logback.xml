<?xml version="1.0" encoding="UTF-8"?>
<!-- scan->true 配置文件发生改变  重新加载配置
     scanPeriod=60 seconds  设置监测配置文件 修改时间间隔 60秒扫描一次
     debug=false 不需要打印logback运行状态日志信息
 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!-- 定义参数常量-->
    <!--TRACE<DEBUG<INFO<WARN<ERROR-->

    <!--日志级别-->
    <!--logger.trace("msg") logger.debug... -->
    <property name="log.level" value="debug"/>
    <!--日志最大保留时间 30天-->
    <property name="log.maxHistory" value="30"/>
    <!--定义日志输出文件夹-->
    <property name="log.filePath" value="${catalina.base}/logs/webapps"/>
    <!--日志输出格式 thread 程序执行的线程 什么级别 日志信息-->
    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>
    <!--控制台设置-->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <!--encoder 表示吧日志对象变成字符串再变成输出流输出到文件中-->
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>
    <!--DEBUG设置-->
    <!--随着size的增大 或者时间的推移 滚动出新的日志文件来-->
    <appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径 实时日志文件 写满了就往压缩文件里面存-->
        <file>${log.filePath}/debug.log</file>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--设置文件名称 历史文件保存路径 -->
            <fileNamePattern>${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!--最大日志保存时间-->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <!--encoder 表示吧日志对象变成字符串再变成输出流输出到文件中-->
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!--过滤到不是debug level的记录  只记录该等级的记录-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--INFO设置-->
    <appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.filePath}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!--过滤到不是INFO level的记录  只记录该等级的记录-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--ERROR设置-->
    <appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.filePath}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <!--过滤到不是INFO level的记录  只记录该等级的记录-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMacth>ACCEPT</onMacth>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--存放日志对象
         name->告诉logback需要关注哪个包下面的信息
         level->只记录debug以上的记录 info warn error
         additivity->表示logger继承了root 的 level可以向控制台输出 但是权限依旧是logger的权限 debug
         name指定的package下面所有的类 都在logger里面输出
    -->
    <logger name="com.xyd" level="${log.level}" additivity="true">
        <appender-ref ref="debugAppender"/>
        <appender-ref ref="infoAppender"/>
        <appender-ref ref="errorAppender"/>
    </logger>
    <root level="info">
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>
