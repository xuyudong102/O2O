2020-04-05 11:01:40.078 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:01:40.093 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:01:40.130 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 and s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-05 11:01:40.356 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 2(Long), 1(Long), 0(Integer), 2(Integer)
2020-04-05 11:01:40.419 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-05 11:01:40.430 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:01:40.430 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:01:40.431 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ AND s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? 
2020-04-05 11:01:40.433 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 2(Long), 1(Long)
2020-04-05 11:01:40.435 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-05 11:01:53.132 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:01:53.133 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:01:53.134 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-05 11:01:53.135 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:01:53.138 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-05 11:01:53.139 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:01:53.140 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:01:53.140 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: select * from tb_area order by priority desc 
2020-04-05 11:01:53.140 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-05 11:01:53.145 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-05 11:01:57.283 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:01:57.283 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:01:57.284 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 and s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-05 11:01:57.285 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 2(Long), 1(Long), 0(Integer), 2(Integer)
2020-04-05 11:01:57.295 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-05 11:01:57.297 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:01:57.297 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:01:57.299 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ AND s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? 
2020-04-05 11:01:57.300 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 2(Long), 1(Long)
2020-04-05 11:01:57.302 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-05 11:02:31.440 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:02:31.440 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:02:31.441 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 and s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-05 11:02:31.442 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 2(Long), 1(Long), 0(Integer), 2(Integer)
2020-04-05 11:02:31.448 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-05 11:02:31.450 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:02:31.450 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:02:31.451 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ AND s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? 
2020-04-05 11:02:31.453 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 2(Long), 1(Long)
2020-04-05 11:02:31.456 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-05 11:07:26.599 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:07:26.600 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:07:26.600 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 and s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-05 11:07:26.601 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 2(Long), 1(Long), 0(Integer), 2(Integer)
2020-04-05 11:07:26.608 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-05 11:07:26.610 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:07:26.610 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:07:26.611 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ AND s.shop_category_id=? /*店铺区域*/ /*店铺名字模糊查询*/ /*店铺状态查询*/ /*店铺人员信息查询*/ AND s.owner_id=? 
2020-04-05 11:07:26.612 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 2(Long), 1(Long)
2020-04-05 11:07:26.617 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-05 11:07:31.534 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:07:31.534 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:07:31.535 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:07:31.536 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:07:31.543 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:07:31.544 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:07:31.544 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:07:31.545 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:07:31.547 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:07:31.549 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:08:24.774 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:08:24.775 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:08:24.779 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:08:24.781 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:08:24.790 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:08:24.791 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:08:24.792 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:08:24.792 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:08:24.793 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:08:24.797 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:09:28.694 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:28.694 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:28.695 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-05 11:09:28.695 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:09:28.697 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-05 11:09:28.701 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:28.702 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:28.705 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-05 11:09:28.707 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:09:28.710 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 2
2020-04-05 11:09:29.126 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:29.126 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:29.127 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:09:29.128 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:09:29.134 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:09:29.135 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:29.135 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:29.135 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:09:29.136 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:09:29.139 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:09:30.401 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:30.401 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:30.401 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:09:30.402 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:09:30.408 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:09:30.409 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:30.409 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:30.410 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:09:30.410 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:09:30.412 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:09:41.608 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductById] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:41.608 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:41.608 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id=pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2020-04-05 11:09:41.608 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==> Parameters: 5(Long)
2020-04-05 11:09:41.613 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductById - <==      Total: 1
2020-04-05 11:09:41.614 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:09:41.614 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:09:41.615 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-05 11:09:41.615 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:09:41.618 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 2
2020-04-05 11:10:44.537 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:44.537 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:44.537 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-05 11:10:44.538 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:10:44.542 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-05 11:10:44.542 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:44.542 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:44.543 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-05 11:10:44.544 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:10:44.548 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 2
2020-04-05 11:10:44.839 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:44.839 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:44.840 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:10:44.840 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:10:44.848 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:10:44.849 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:44.849 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:44.850 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:10:44.850 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:10:44.852 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:10:46.514 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:46.514 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:46.515 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:10:46.515 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:10:46.518 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:10:46.519 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:46.520 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:46.520 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:10:46.521 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:10:46.523 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:10:57.329 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:57.329 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:57.330 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:10:57.330 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:10:57.333 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:10:57.334 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:10:57.334 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:10:57.334 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:10:57.335 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:10:57.337 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:11:51.218 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:11:51.218 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:11:51.219 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:11:51.220 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:11:51.225 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:11:51.227 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:11:51.227 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:11:51.227 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:11:51.228 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:11:51.230 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:11:53.921 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.updateProduct] user[master] Stretegy,SqlCommanType[UPDATE]..
2020-04-05 11:11:53.922 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-05 11:11:53.923 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==>  Preparing: UPDATE tb_product SET last_edit_time=?, enable_status=? where product_id=? and shop_id=? 
2020-04-05 11:11:53.926 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==> Parameters: 2020-04-05 11:11:53.921(Timestamp), 0(Integer), 5(Long), 2(Long)
2020-04-05 11:11:53.949 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.updateProduct - <==    Updates: 1
2020-04-05 11:11:53.965 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:11:53.965 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:11:53.966 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:11:53.966 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:11:53.972 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:11:53.973 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:11:53.973 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:11:53.974 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:11:53.975 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:11:53.976 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:12:40.853 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:12:40.853 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:12:40.854 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:12:40.854 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:12:40.859 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:12:40.860 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:12:40.860 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:12:40.860 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:12:40.861 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:12:40.863 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:13:00.655 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.updateProduct] user[master] Stretegy,SqlCommanType[UPDATE]..
2020-04-05 11:13:00.656 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-05 11:13:00.656 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==>  Preparing: UPDATE tb_product SET last_edit_time=?, enable_status=? where product_id=? and shop_id=? 
2020-04-05 11:13:00.657 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==> Parameters: 2020-04-05 11:13:00.655(Timestamp), 1(Integer), 5(Long), 2(Long)
2020-04-05 11:13:00.665 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.updateProduct - <==    Updates: 1
2020-04-05 11:13:00.678 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:13:00.679 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:13:00.680 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:13:00.681 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:13:00.683 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:13:00.684 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:13:00.684 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:13:00.685 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:13:00.685 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:13:00.686 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:13:21.982 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:13:21.982 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:13:21.983 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:13:21.984 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:13:21.987 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:13:21.991 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:13:21.991 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:13:21.991 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:13:21.992 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:13:21.994 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:13:24.442 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.updateProduct] user[master] Stretegy,SqlCommanType[UPDATE]..
2020-04-05 11:13:24.442 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-05 11:13:24.442 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==>  Preparing: UPDATE tb_product SET last_edit_time=?, enable_status=? where product_id=? and shop_id=? 
2020-04-05 11:13:24.443 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==> Parameters: 2020-04-05 11:13:24.441(Timestamp), 0(Integer), 5(Long), 2(Long)
2020-04-05 11:13:24.451 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - <==    Updates: 1
2020-04-05 11:13:24.465 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:13:24.465 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:13:24.465 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:13:24.466 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:13:24.468 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:13:24.469 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:13:24.469 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:13:24.470 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:13:24.471 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:13:24.472 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:14:02.817 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.updateProduct] user[master] Stretegy,SqlCommanType[UPDATE]..
2020-04-05 11:14:02.818 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-05 11:14:02.818 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==>  Preparing: UPDATE tb_product SET last_edit_time=?, enable_status=? where product_id=? and shop_id=? 
2020-04-05 11:14:02.819 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==> Parameters: 2020-04-05 11:14:02.817(Timestamp), 1(Integer), 5(Long), 2(Long)
2020-04-05 11:14:02.834 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - <==    Updates: 1
2020-04-05 11:14:02.847 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:14:02.847 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:14:02.847 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:14:02.848 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:14:02.849 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:14:02.850 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:14:02.850 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:14:02.850 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:14:02.851 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:14:02.852 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:14:15.919 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.updateProduct] user[master] Stretegy,SqlCommanType[UPDATE]..
2020-04-05 11:14:15.919 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-05 11:14:15.920 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==>  Preparing: UPDATE tb_product SET last_edit_time=?, enable_status=? where product_id=? and shop_id=? 
2020-04-05 11:14:15.921 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==> Parameters: 2020-04-05 11:14:15.919(Timestamp), 1(Integer), 1(Long), 2(Long)
2020-04-05 11:14:15.930 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.updateProduct - <==    Updates: 1
2020-04-05 11:14:15.943 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:14:15.943 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:14:15.943 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:14:15.944 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:14:15.946 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:14:15.946 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:14:15.946 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:14:15.947 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:14:15.947 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:14:15.949 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:16:06.135 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:06.136 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:06.136 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:16:06.137 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:16:06.140 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:16:06.141 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:06.142 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:06.144 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:16:06.144 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:16:06.146 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:16:14.991 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductById] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:14.991 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:14.991 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id=pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2020-04-05 11:16:14.992 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==> Parameters: 5(Long)
2020-04-05 11:16:14.995 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductById - <==      Total: 1
2020-04-05 11:16:14.995 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:14.995 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:14.996 [http-bio-8888-exec-4] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-05 11:16:14.996 [http-bio-8888-exec-4] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:16:14.998 [http-bio-8888-exec-4] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 2
2020-04-05 11:16:17.368 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:17.368 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:17.369 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:16:17.370 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:16:17.378 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:16:17.380 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:17.380 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:17.380 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:16:17.381 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:16:17.382 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:16:19.969 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:19.970 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:19.970 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-05 11:16:19.971 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:16:19.978 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-05 11:16:19.979 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:19.979 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:19.979 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-05 11:16:19.980 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:16:19.982 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 2
2020-04-05 11:16:22.338 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:22.338 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:22.339 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:16:22.339 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:16:22.343 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:16:22.344 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:22.344 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:22.344 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:16:22.344 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:16:22.346 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-05 11:16:24.447 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:24.447 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:24.447 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-05 11:16:24.450 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 2(Long)
2020-04-05 11:16:24.454 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-05 11:16:24.454 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:24.454 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:24.455 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: select * from tb_area order by priority desc 
2020-04-05 11:16:24.456 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-05 11:16:24.462 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-05 11:16:28.941 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:28.942 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:28.942 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? ORDER BY priority DESC LIMIT ?,? 
2020-04-05 11:16:28.943 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 2(Long), 0(Integer), 999(Integer)
2020-04-05 11:16:28.946 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 10
2020-04-05 11:16:28.947 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-05 11:16:28.947 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-05 11:16:28.947 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? 
2020-04-05 11:16:28.947 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 2(Long)
2020-04-05 11:16:28.949 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
