2020-04-10 10:06:01.817 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:01.877 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:01.900 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:01.901 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:01.918 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:06:01.918 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:06:02.239 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:06:02.239 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:06:02.427 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:06:02.460 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:06:02.465 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:02.465 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:02.466 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:02.466 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:02.466 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:06:02.467 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:06:02.468 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:06:02.467 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:06:02.472 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:06:02.480 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:06:15.977 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:15.978 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:15.978 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:06:15.979 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:06:15.984 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:06:15.989 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:15.990 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:15.992 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:06:15.994 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:06:15.998 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:06:25.051 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:25.052 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:25.052 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:06:25.053 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 31(Long)
2020-04-10 10:06:25.057 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:06:25.058 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:25.059 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:25.059 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:06:25.061 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 31(Long)
2020-04-10 10:06:25.064 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 0
2020-04-10 10:06:25.065 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:25.065 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:25.069 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:06:25.074 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 31(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:06:25.079 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:06:25.081 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:25.082 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:25.083 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:06:25.084 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 31(Long), 1(Integer)
2020-04-10 10:06:25.087 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:06:26.727 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:26.728 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:26.728 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:06:26.729 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:06:26.732 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:06:26.733 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:06:26.735 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:06:26.736 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:06:26.737 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:06:26.740 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:08:47.713 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:47.715 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:47.717 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:08:47.718 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:08:47.729 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:08:47.731 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:47.731 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:47.731 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:08:47.732 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:08:47.736 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:08:50.147 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:50.148 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:50.148 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:08:50.149 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 31(Long)
2020-04-10 10:08:50.161 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:08:50.162 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:50.162 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:50.163 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:08:50.164 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 31(Long)
2020-04-10 10:08:50.168 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 0
2020-04-10 10:08:50.205 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:50.206 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:50.208 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:08:50.208 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 31(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:08:50.213 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:08:50.214 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:50.215 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:50.217 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:08:50.217 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 31(Long), 1(Integer)
2020-04-10 10:08:50.223 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:08:51.795 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:51.795 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:51.796 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:08:51.796 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:08:51.800 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:08:51.801 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:08:51.801 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:08:51.801 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:08:51.804 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:08:51.813 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:10:41.570 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:10:41.571 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:10:41.572 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:10:41.573 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:10:41.579 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:10:41.580 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:10:41.581 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:10:41.583 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:10:41.583 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:10:41.596 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:10:41.599 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:10:41.600 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:10:41.603 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:10:41.604 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:10:41.610 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:10:41.612 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:10:41.613 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:10:41.616 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:10:41.617 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:10:41.619 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:10:43.225 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:10:43.227 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:10:43.227 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:10:43.228 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:10:43.233 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:10:43.234 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:10:43.234 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:10:43.235 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:10:43.236 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:10:43.238 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:11:25.292 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:25.293 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:25.294 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:11:25.295 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:11:25.301 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:11:25.302 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:25.302 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:25.303 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:11:25.303 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:11:25.306 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:11:26.791 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:26.792 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:26.792 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:11:26.793 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:11:26.799 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:11:26.800 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:26.801 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:26.803 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:11:26.804 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:11:26.807 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:11:31.230 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:31.231 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:31.232 [http-bio-8888-exec-10] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:11:31.233 [http-bio-8888-exec-10] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 10(Long)
2020-04-10 10:11:31.237 [http-bio-8888-exec-10] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:11:31.238 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:31.238 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:31.239 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:11:31.241 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:11:31.244 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:11:31.257 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:31.257 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:31.260 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:31.262 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 10(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:31.266 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 1
2020-04-10 10:11:31.267 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:31.268 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:31.268 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:31.269 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 10(Long), 1(Integer)
2020-04-10 10:11:31.271 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:33.036 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:33.037 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:33.037 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:11:33.038 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:11:33.041 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:11:33.042 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:33.043 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:33.043 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:11:33.044 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:11:33.050 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:11:34.351 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:34.351 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:34.352 [http-bio-8888-exec-10] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:11:34.352 [http-bio-8888-exec-10] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:11:34.353 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:34.353 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:34.354 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:34.354 [http-bio-8888-exec-10] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:11:34.355 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:34.355 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:34.355 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:34.356 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:11:34.356 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:11:34.360 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:11:34.364 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:34.364 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:34.365 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:11:34.365 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:34.366 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:11:34.368 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:37.604 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:37.604 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:37.604 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:11:37.604 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:11:37.607 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:37.608 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:37.608 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:11:37.608 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:11:37.609 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:37.609 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:37.609 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:37.609 [http-bio-8888-exec-9] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:11:37.610 [http-bio-8888-exec-9] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:11:37.613 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:11:37.614 [http-bio-8888-exec-9] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:11:37.615 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:37.615 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:37.616 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:11:37.616 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:11:37.618 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:11:41.937 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:41.937 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:41.938 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:11:41.939 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:11:41.941 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:11:41.941 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:41.945 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:41.945 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:41.945 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:41.946 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:11:41.946 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:41.946 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:11:41.947 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:41.948 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:11:41.949 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:11:41.950 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:41.951 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:41.951 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:41.952 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:11:41.954 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:43.569 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:43.570 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:43.571 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 and s.shop_category_id=? /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:43.572 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 20(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:43.579 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:11:43.580 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:43.581 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:43.581 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ AND s.shop_category_id=? /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:43.582 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 20(Long), 1(Integer)
2020-04-10 10:11:43.583 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:45.453 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:45.454 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:45.455 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:11:45.456 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 30(Long)
2020-04-10 10:11:45.460 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:11:45.462 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:45.462 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:45.463 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:11:45.463 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 30(Long)
2020-04-10 10:11:45.461 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:45.464 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:45.465 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:11:45.466 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 30(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:45.466 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 0
2020-04-10 10:11:45.468 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:11:45.470 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:45.471 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:45.472 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:11:45.472 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 30(Long), 1(Integer)
2020-04-10 10:11:45.476 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:11:47.615 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:47.616 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:47.616 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:11:47.617 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:11:47.619 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:11:47.619 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:47.620 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:47.621 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:11:47.621 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:11:47.622 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:47.622 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:47.622 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:47.623 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:11:47.623 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:47.627 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:11:47.628 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:47.629 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:47.629 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:47.630 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:11:47.632 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:50.587 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:50.587 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:50.588 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:50.589 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:50.592 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:11:50.594 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:50.594 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:50.595 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:50.598 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:11:50.601 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:51.480 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:51.480 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:51.481 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:11:51.481 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:11:51.484 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:11:51.485 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:51.485 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:51.485 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:11:51.486 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:11:51.487 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:11:52.716 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:52.716 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:52.717 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:11:52.718 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:11:52.721 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:11:52.724 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:52.724 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:52.724 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:52.726 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:52.726 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:11:52.727 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:11:52.727 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:11:52.728 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:11:52.730 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:11:52.731 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:11:52.731 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:11:52.732 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:11:52.732 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:11:52.733 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:11:52.739 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:03.499 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:03.500 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:03.501 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:03.503 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:14:03.505 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:14:03.506 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:03.507 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:03.507 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:03.508 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:03.511 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:04.786 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:04.786 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:04.787 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:04.787 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:14:04.790 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:14:04.791 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:04.792 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:04.793 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:04.794 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:04.797 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:05.483 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.483 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.483 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:05.484 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:14:05.485 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:05.486 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.486 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.487 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:05.487 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:05.489 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:05.520 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.521 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.521 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:05.522 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:14:05.524 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:05.525 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.526 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.526 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:05.527 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:05.530 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:05.553 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.553 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.554 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:05.554 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:14:05.556 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:05.557 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.557 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.558 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:05.559 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:05.561 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:05.586 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.587 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.587 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:05.588 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:14:05.590 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:05.591 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.592 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.593 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:05.594 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:05.596 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:05.633 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.633 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.633 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:05.634 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:14:05.636 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:05.637 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:05.637 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:05.638 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:05.638 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:05.639 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:06.929 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:06.930 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:06.930 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:06.931 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:14:06.932 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:06.933 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:06.933 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:06.934 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:06.934 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:06.935 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:06.948 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:06.948 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:06.949 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:06.950 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:14:06.951 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:06.952 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:06.952 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:06.953 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:06.953 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:06.954 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:06.982 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:06.983 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:06.983 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:06.984 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:14:06.985 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:06.986 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:06.986 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:06.987 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:06.987 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:06.988 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:07.015 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:07.015 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:07.016 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:07.016 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:14:07.018 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:07.019 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:07.019 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:07.020 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:07.020 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:07.022 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:08.765 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:08.766 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:08.766 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:08.767 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:14:08.768 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:08.769 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:08.769 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:08.769 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:08.770 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:08.771 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:08.797 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:08.797 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:08.798 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:08.798 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:14:08.800 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:08.801 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:08.801 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:08.801 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:08.802 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:08.804 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:08.832 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:08.832 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:08.832 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:08.833 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 39(Integer), 3(Integer)
2020-04-10 10:14:08.834 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:08.835 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:08.835 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:08.836 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:08.836 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:08.838 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:09.280 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.280 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.280 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:09.281 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 42(Integer), 3(Integer)
2020-04-10 10:14:09.283 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:09.284 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.284 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.284 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:09.285 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:09.286 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:09.314 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.314 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.315 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:09.316 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 45(Integer), 3(Integer)
2020-04-10 10:14:09.317 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:09.318 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.318 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.319 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:09.319 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:09.321 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:09.349 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.349 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.350 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:09.350 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 48(Integer), 3(Integer)
2020-04-10 10:14:09.352 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:09.352 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.353 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.353 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:09.353 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:09.354 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:09.381 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.382 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.382 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:09.383 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 51(Integer), 3(Integer)
2020-04-10 10:14:09.384 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:09.385 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:09.385 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:09.386 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:09.386 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:09.388 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:28.392 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:28.392 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:28.393 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:28.394 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 54(Integer), 3(Integer)
2020-04-10 10:14:28.395 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:28.396 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:28.396 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:28.396 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:28.397 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:28.398 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:28.425 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:28.425 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:28.425 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:28.426 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 57(Integer), 3(Integer)
2020-04-10 10:14:28.427 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:28.428 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:28.428 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:28.429 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:28.429 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:28.430 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:28.458 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:28.458 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:28.459 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:28.459 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 60(Integer), 3(Integer)
2020-04-10 10:14:28.460 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:28.461 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:28.462 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:28.462 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:28.463 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:28.464 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:29.092 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.092 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.093 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:29.093 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 63(Integer), 3(Integer)
2020-04-10 10:14:29.095 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:29.096 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.096 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.097 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:29.097 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:29.098 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:29.123 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.123 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.123 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:29.124 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 66(Integer), 3(Integer)
2020-04-10 10:14:29.125 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:29.127 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.127 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.127 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:29.128 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:29.130 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:29.158 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.158 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.159 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:29.159 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 69(Integer), 3(Integer)
2020-04-10 10:14:29.161 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:29.162 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.162 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.162 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:29.163 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:29.164 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:29.194 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.194 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.195 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:29.195 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 72(Integer), 3(Integer)
2020-04-10 10:14:29.197 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:29.198 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:29.198 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:29.199 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:29.200 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:29.202 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.006 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.006 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.007 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.007 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 75(Integer), 3(Integer)
2020-04-10 10:14:32.008 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.009 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.009 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.010 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.010 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.012 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.039 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.040 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.040 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.041 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 78(Integer), 3(Integer)
2020-04-10 10:14:32.042 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.043 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.043 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.044 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.044 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.045 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.077 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.077 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.077 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.078 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 81(Integer), 3(Integer)
2020-04-10 10:14:32.079 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.080 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.080 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.081 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.082 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.084 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.106 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.106 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.106 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.107 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 84(Integer), 3(Integer)
2020-04-10 10:14:32.108 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.109 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.109 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.109 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.110 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.111 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.138 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.138 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.139 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.139 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 87(Integer), 3(Integer)
2020-04-10 10:14:32.140 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.141 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.141 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.142 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.142 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.144 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.155 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.156 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.156 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.157 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 90(Integer), 3(Integer)
2020-04-10 10:14:32.159 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.159 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.160 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.160 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.161 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.163 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:32.188 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.189 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.189 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:32.189 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 93(Integer), 3(Integer)
2020-04-10 10:14:32.191 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:32.191 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:32.192 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:32.192 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:32.193 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:32.194 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:33.388 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.388 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.388 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:33.389 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 96(Integer), 3(Integer)
2020-04-10 10:14:33.390 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:33.391 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.391 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.392 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:33.392 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:33.394 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:33.422 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.423 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.423 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:33.424 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 99(Integer), 3(Integer)
2020-04-10 10:14:33.425 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:33.426 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.426 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.427 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:33.427 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:33.429 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:33.455 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.455 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.456 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:33.456 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 102(Integer), 3(Integer)
2020-04-10 10:14:33.458 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:33.459 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.459 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.459 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:33.460 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:33.461 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:33.489 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.489 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.490 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:33.490 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 105(Integer), 3(Integer)
2020-04-10 10:14:33.491 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:33.492 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:33.493 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:33.493 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:33.493 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:33.494 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:55.733 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:55.733 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:55.733 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%å¥¶è¶%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:55.734 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:14:55.735 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:14:55.736 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:55.737 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:55.737 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%å¥¶è¶%' and enable_status=? 
2020-04-10 10:14:55.738 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:55.739 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:14:58.997 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:58.997 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:58.998 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:14:58.998 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:14:59.002 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:14:59.003 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:14:59.003 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:14:59.004 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:14:59.004 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:14:59.005 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:00.381 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:00.381 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:00.382 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:00.382 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:15:00.385 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:00.386 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:00.386 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:00.387 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:00.387 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:00.390 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.046 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.046 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.046 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.047 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:15:01.048 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.049 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.050 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.050 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.051 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.052 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.079 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.079 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.079 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.080 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:15:01.081 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.082 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.082 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.083 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.083 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.085 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.119 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.119 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.120 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.120 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:15:01.123 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.124 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.124 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.125 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.125 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.127 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.888 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.889 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.890 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.891 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:15:01.893 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.894 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.894 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.894 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.894 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.896 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.914 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.914 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.915 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.915 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:15:01.917 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.917 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.918 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.918 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.918 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.919 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.946 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.946 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.946 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.947 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:15:01.948 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.949 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.949 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.950 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.950 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.951 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:01.967 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.967 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.967 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:01.968 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:15:01.970 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:01.971 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:01.971 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:01.972 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:01.973 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:01.975 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:06.094 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:06.095 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:06.095 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:06.096 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:06.097 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:06.098 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:06.098 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:06.099 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:06.099 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:06.100 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:06.132 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:06.132 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:06.133 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:06.133 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:15:06.135 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:06.136 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:06.136 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:06.137 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:06.138 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:06.141 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:07.694 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.694 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.695 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:07.695 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:15:07.697 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:07.697 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.697 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.698 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:07.698 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:07.700 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:07.728 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.728 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.729 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:07.729 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:15:07.731 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:07.732 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.732 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.733 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:07.733 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:07.735 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:07.761 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.761 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.761 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:07.762 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:15:07.763 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:07.764 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.764 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.765 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:07.765 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:07.767 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:07.798 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.798 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.798 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:07.799 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:15:07.800 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:07.801 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.802 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.802 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:07.803 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:07.806 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:07.853 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.854 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.854 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:07.855 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:15:07.858 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:07.859 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.859 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.860 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:07.862 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:07.864 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:07.900 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.900 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.900 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:07.901 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:15:07.904 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:07.905 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:07.905 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:07.905 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%åå¡%' and enable_status=? 
2020-04-10 10:15:07.906 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:07.907 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:09.791 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:09.792 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:09.792 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:09.792 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:09.794 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:09.795 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:09.795 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:09.796 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:09.796 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:09.797 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:12.393 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:12.394 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:12.394 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:12.394 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:15:12.396 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:12.397 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:12.397 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:12.398 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:12.398 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:12.400 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:18.176 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:18.176 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:18.176 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:18.177 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:18.178 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:18.179 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:18.179 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:18.180 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:18.180 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:18.182 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:21.321 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:21.322 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:21.322 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:21.323 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:21.324 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:21.325 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:21.325 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:21.325 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:21.326 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:21.327 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:23.889 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:23.889 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:23.889 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:15:23.890 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:15:23.891 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:15:23.892 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:23.893 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:23.894 [http-bio-8888-exec-1] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:15:23.894 [http-bio-8888-exec-1] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:15:23.896 [http-bio-8888-exec-1] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:15:23.909 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:23.909 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:23.910 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:23.911 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:23.915 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:23.916 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:23.916 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:23.917 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:23.917 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:23.919 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:25.109 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:25.109 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:25.109 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:25.110 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:15:25.111 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:25.112 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:25.113 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:25.114 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:25.114 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:25.117 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:30.636 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:30.637 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:30.637 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:30.637 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:30.639 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:30.640 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:30.640 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:30.640 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:30.640 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:30.642 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.653 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.653 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.653 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.654 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:15:31.655 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.656 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.656 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.656 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.657 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.658 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.686 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.686 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.687 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.687 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:15:31.689 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.690 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.690 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.690 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.691 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.692 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.719 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.719 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.719 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.720 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:15:31.721 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.722 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.722 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.723 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.723 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.725 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.752 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.752 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.752 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.753 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:15:31.754 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.755 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.755 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.755 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.756 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.757 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.789 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.790 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.790 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.791 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:15:31.792 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.793 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.793 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.794 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.796 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.798 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.823 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.823 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.823 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.824 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:15:31.825 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.826 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.827 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.827 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.828 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.830 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:31.862 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.862 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.862 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:31.863 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:15:31.865 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:31.866 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:31.866 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:31.867 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:15:31.868 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:31.870 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:33.419 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:33.419 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:33.420 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:33.420 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:33.422 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:33.423 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:33.423 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:33.423 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:33.424 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:33.425 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:37.778 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:37.778 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:37.778 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:15:37.779 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:15:37.783 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:15:37.783 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:37.783 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:37.784 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:37.784 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:37.784 [http-bio-8888-exec-6] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:15:37.784 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:37.784 [http-bio-8888-exec-6] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:15:37.785 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:15:37.787 [http-bio-8888-exec-6] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:15:37.789 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:37.790 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:37.790 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:37.791 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:37.792 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:37.795 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:39.103 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.103 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.103 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:39.104 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:15:39.106 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:15:39.107 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.108 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.109 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:39.109 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:39.111 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:39.699 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.699 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.699 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:39.700 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:15:39.701 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:39.703 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.703 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.704 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:39.705 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:39.706 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:39.734 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.734 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.735 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:39.735 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:15:39.737 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:39.738 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.739 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.739 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:39.739 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:39.741 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:39.764 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.764 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.765 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:39.765 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:15:39.766 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:39.767 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:39.767 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:39.768 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:39.768 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:39.770 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:40.265 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:40.265 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:40.266 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:40.266 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:15:40.267 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:40.268 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:40.268 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:40.268 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:40.269 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:40.270 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:40.299 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:40.299 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:40.299 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:40.300 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:15:40.301 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:40.301 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:40.302 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:40.302 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:40.302 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:40.304 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:15:40.318 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:40.318 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:40.319 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:15:40.319 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:15:40.320 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:15:40.321 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:15:40.321 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:15:40.322 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:15:40.322 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:15:40.324 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:01.908 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:01.908 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:01.908 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:01.909 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:16:01.911 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:01.912 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:01.912 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:01.912 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:01.913 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:01.914 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:01.941 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:01.941 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:01.941 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:01.941 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:16:01.943 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:01.944 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:01.944 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:01.945 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:01.945 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:01.947 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.073 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.073 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.073 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.074 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:16:02.075 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.076 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.076 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.077 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.078 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.080 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.107 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.107 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.107 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.108 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:16:02.109 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.109 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.110 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.110 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.110 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.112 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.142 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.143 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.143 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.143 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:16:02.145 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.145 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.146 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.146 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.147 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.148 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.179 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.179 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.180 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.180 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 39(Integer), 3(Integer)
2020-04-10 10:16:02.184 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.185 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.185 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.186 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.187 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.196 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.250 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.251 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.251 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.252 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 42(Integer), 3(Integer)
2020-04-10 10:16:02.253 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.254 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.254 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.255 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.256 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.258 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.690 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.690 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.690 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.691 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 45(Integer), 3(Integer)
2020-04-10 10:16:02.692 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.693 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.693 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.693 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.695 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.696 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.724 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.724 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.724 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.725 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 48(Integer), 3(Integer)
2020-04-10 10:16:02.726 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.726 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.727 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.727 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.727 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.729 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:02.747 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.747 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.747 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:02.748 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 51(Integer), 3(Integer)
2020-04-10 10:16:02.749 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:16:02.750 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:02.750 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:02.750 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:02.751 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:02.752 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:16:05.850 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductById] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:05.850 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:05.851 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id=pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2020-04-10 10:16:05.851 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==> Parameters: 7(Long)
2020-04-10 10:16:05.856 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductById - <==      Total: 3
2020-04-10 10:16:07.344 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:07.344 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:07.344 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:16:07.345 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:16:07.345 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:07.345 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:07.345 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:16:07.346 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:16:07.346 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:16:07.347 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:07.349 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:07.349 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:16:07.350 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:16:07.350 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:16:07.350 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:16:07.351 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:16:07.351 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:16:07.351 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:16:07.352 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:16:07.353 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:28.565 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:28.565 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:28.565 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:28.566 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:17:28.570 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:17:28.571 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:28.571 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:28.571 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:28.572 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:28.573 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:28.879 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:28.880 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:28.880 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:28.880 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:17:28.882 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:28.883 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:28.883 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:28.883 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:28.884 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:28.886 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:28.912 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:28.912 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:28.913 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:28.913 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:17:28.915 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:28.915 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:28.916 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:28.916 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:28.917 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:28.918 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:29.014 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.014 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.015 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:29.015 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:17:29.017 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:29.018 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.019 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.019 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:29.020 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:29.022 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:29.049 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.049 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.049 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:29.049 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:17:29.051 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:29.052 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.052 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.052 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:29.053 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:29.054 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:29.077 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.078 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.078 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:29.079 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:17:29.080 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:29.081 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.081 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.081 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:29.082 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:29.083 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:29.117 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.117 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.118 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:29.119 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:17:29.121 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:29.121 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.122 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.122 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:29.123 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:29.124 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:29.150 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.150 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.151 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:29.152 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:17:29.154 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:29.155 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.155 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.156 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:29.156 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:29.158 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:17:29.214 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.215 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.215 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:17:29.216 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:17:29.217 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:17:29.219 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:17:29.220 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:17:29.221 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:17:29.221 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:17:29.223 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:19:17.688 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:17.688 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:17.688 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:19:17.689 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:19:17.690 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:19:17.691 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:17.691 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:17.692 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:19:17.693 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:19:17.694 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:19:17.728 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:17.728 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:17.728 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:19:17.729 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:19:17.731 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:19:17.732 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:17.732 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:17.733 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:19:17.733 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:19:17.735 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:19:17.756 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:17.756 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:17.756 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:19:17.757 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:19:17.759 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:19:17.760 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:17.760 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:17.761 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:19:17.761 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:19:17.763 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:19:50.980 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:50.980 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:50.981 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:50.981 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:50.981 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:19:50.981 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:19:50.981 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:19:50.982 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:19:50.983 [http-bio-8888-exec-9] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:19:50.984 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:19:50.988 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:50.984 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:50.989 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:50.989 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:50.989 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:19:50.989 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:19:50.990 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:19:50.990 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:19:50.991 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:19:50.991 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:19:53.593 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:53.594 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:53.594 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:19:53.595 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:19:53.598 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:19:53.599 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:19:53.599 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:19:53.599 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:19:53.600 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:19:53.603 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:21.119 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:21.119 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:21.119 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:21.120 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:20:21.121 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:21.122 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:21.122 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:21.123 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:21.123 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:21.125 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:21.500 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:21.501 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:21.501 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:21.502 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:20:21.503 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:21.504 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:21.505 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:21.505 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:21.506 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:21.508 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:21.534 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:21.534 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:21.534 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:21.535 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:20:21.536 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:21.537 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:21.537 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:21.538 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:21.538 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:21.540 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:24.998 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:24.998 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:24.999 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:24.999 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:20:25.001 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.001 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.002 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.002 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.002 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.003 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.171 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.171 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.172 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.172 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:20:25.174 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.175 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.176 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.176 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.177 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.179 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.198 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.198 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.199 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.199 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:20:25.200 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.201 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.201 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.202 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.202 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.203 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.231 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.232 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.232 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.233 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:20:25.235 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.236 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.236 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.236 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.237 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.243 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.267 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.268 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.268 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.269 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:20:25.270 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.271 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.271 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.271 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.272 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.274 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.299 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.299 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.300 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.300 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:20:25.302 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.303 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.303 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.303 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.304 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.305 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.331 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.331 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.331 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.332 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:20:25.333 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.333 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.334 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.334 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.335 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.336 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:25.349 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.349 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.349 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:25.349 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:20:25.351 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:25.351 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:25.351 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:25.352 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:25.352 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:25.354 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:26.315 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:26.315 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:26.316 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:26.316 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 39(Integer), 3(Integer)
2020-04-10 10:20:26.318 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:26.319 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:26.319 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:26.319 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:26.319 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:26.321 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:26.362 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:26.362 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:26.363 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:26.364 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 42(Integer), 3(Integer)
2020-04-10 10:20:26.365 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:26.366 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:26.366 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:26.367 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:26.367 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:26.368 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:26.398 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:26.398 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:26.398 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:26.399 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 45(Integer), 3(Integer)
2020-04-10 10:20:26.401 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:26.402 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:26.402 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:26.402 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:26.403 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:26.404 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:29.176 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:29.176 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:29.177 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 and s.shop_category_id=? /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:29.177 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 20(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:20:29.181 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:20:29.181 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:29.181 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:29.182 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ AND s.shop_category_id=? /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:29.182 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 20(Long), 1(Integer)
2020-04-10 10:20:29.183 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:30.833 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:30.834 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:30.835 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:20:30.835 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 30(Long)
2020-04-10 10:20:30.837 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:20:30.837 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:30.838 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:30.839 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:30.839 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:30.839 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:30.839 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:20:30.839 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 30(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:20:30.840 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 30(Long)
2020-04-10 10:20:30.841 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:30.841 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 0
2020-04-10 10:20:30.842 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:30.842 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:30.842 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:30.843 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 30(Long), 1(Integer)
2020-04-10 10:20:30.844 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:33.133 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:33.133 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:33.134 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:20:33.134 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:20:33.140 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:20:33.140 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:33.141 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:33.141 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:20:33.141 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:20:33.143 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:20:33.179 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:33.179 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:33.180 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:33.180 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:20:33.183 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:20:33.184 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:33.184 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:33.184 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:33.185 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:33.190 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:34.330 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.330 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.330 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:34.331 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:20:34.332 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:20:34.333 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.333 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.333 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:34.334 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:34.335 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:34.792 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.792 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.792 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:34.793 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:20:34.795 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:34.796 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.796 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.797 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:34.797 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:34.799 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:34.826 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.826 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.826 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:34.827 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:20:34.829 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:34.830 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.830 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.831 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:34.831 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:34.832 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:34.844 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.844 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.844 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:34.845 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:20:34.846 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:34.846 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:34.847 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:34.847 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:34.847 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:34.849 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:35.654 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.655 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.656 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:35.657 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:20:35.659 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:35.660 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.660 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.660 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:35.661 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:35.662 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:35.676 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.676 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.677 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:35.677 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:20:35.678 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:35.679 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.679 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.679 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:35.680 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:35.681 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:35.694 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.695 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.695 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:35.695 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:20:35.697 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:35.698 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.698 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.698 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:35.698 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:35.700 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:35.729 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.729 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.730 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:20:35.730 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:20:35.732 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:20:35.733 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:35.733 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:35.733 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:20:35.734 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:20:35.735 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:20:38.574 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:38.575 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:38.575 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:20:38.575 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:38.575 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:38.575 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 29(Long)
2020-04-10 10:20:38.576 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:38.576 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:20:38.577 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:20:38.578 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:38.578 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:20:38.578 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:38.578 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:20:38.578 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:38.578 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:38.579 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 29(Long)
2020-04-10 10:20:38.579 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:38.579 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:38.581 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:38.581 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 3
2020-04-10 10:20:39.528 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:39.528 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:39.528 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:39.529 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:20:39.530 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:20:39.531 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:39.531 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:39.532 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:39.532 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:39.533 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:45.457 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:45.457 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:45.457 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:45.457 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:20:45.459 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:45.459 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:45.459 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:45.459 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:45.460 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:45.461 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:45.470 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:45.470 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:45.471 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:45.473 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:20:45.474 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:45.475 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:45.475 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:45.475 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:45.476 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:45.477 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:45.491 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:45.492 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:45.492 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:45.492 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:20:45.494 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:45.494 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:45.494 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:45.495 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:45.495 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:45.497 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:46.171 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.171 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.171 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:46.172 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:20:46.173 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:46.174 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.174 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.174 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:46.175 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:46.176 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:46.188 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.188 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.188 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:46.189 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:20:46.190 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:46.190 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.191 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.191 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:46.191 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:46.192 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:46.205 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.205 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.205 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:46.205 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:20:46.207 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:46.207 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.207 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.208 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:46.208 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:46.209 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:46.221 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.221 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.221 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:46.222 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:20:46.223 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:46.224 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:46.224 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:46.224 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:46.225 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:46.226 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:47.745 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductById] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:47.745 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:47.745 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id=pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2020-04-10 10:20:47.746 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==> Parameters: 2(Long)
2020-04-10 10:20:47.750 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductById - <==      Total: 2
2020-04-10 10:20:53.465 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:53.465 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:53.465 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:20:53.466 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 29(Long)
2020-04-10 10:20:53.466 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:53.467 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:53.467 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:53.467 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:20:53.467 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:20:53.468 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:53.468 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:53.469 [http-bio-8888-exec-5] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:20:53.470 [http-bio-8888-exec-5] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 29(Long)
2020-04-10 10:20:53.470 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:20:53.471 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:53.471 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:53.471 [http-bio-8888-exec-5] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 3
2020-04-10 10:20:53.472 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:53.472 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:53.474 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:55.256 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:55.256 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:55.256 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:55.257 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:20:55.258 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:20:55.258 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:55.258 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:55.259 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:55.259 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:55.260 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:56.269 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.269 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.269 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:56.270 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:20:56.271 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:56.272 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.272 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.273 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:56.273 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:56.274 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:56.307 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.307 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.308 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:56.308 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:20:56.309 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:56.310 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.310 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.311 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:56.311 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:56.313 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:56.341 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.341 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.341 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:56.342 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:20:56.343 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:56.343 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.344 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.344 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:56.345 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:56.346 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:20:56.374 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.374 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.375 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:20:56.375 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:20:56.376 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:20:56.377 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:20:56.377 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:20:56.378 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:20:56.378 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:20:56.380 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:30:00.878 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:00.879 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:00.879 [http-bio-8888-exec-1] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:30:00.880 [http-bio-8888-exec-1] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:30:00.881 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:00.881 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:00.881 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:00.882 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:30:00.882 [http-bio-8888-exec-1] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:30:00.883 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:00.884 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:00.886 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:30:00.887 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:30:00.889 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:30:00.890 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:30:00.890 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:00.890 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:00.891 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:00.892 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:00.894 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:03.125 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.126 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.126 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:03.126 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:30:03.129 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:30:03.129 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.129 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.130 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:03.130 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:03.131 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:03.522 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.522 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.522 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:03.523 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:30:03.524 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:03.524 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.524 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.525 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:03.525 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:03.526 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:03.539 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.539 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.539 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:03.539 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:30:03.540 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:03.541 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.541 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.541 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:03.542 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:03.543 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:03.555 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.555 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.555 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:03.557 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:30:03.558 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:03.559 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.559 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.559 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:03.559 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:03.561 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:03.573 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.573 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.573 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:03.574 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:30:03.575 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:03.576 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:03.576 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:03.576 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:03.577 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:03.578 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:04.056 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:04.056 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:04.057 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:04.057 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:30:04.059 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:04.060 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:04.060 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:04.061 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:04.061 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:04.063 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:04.092 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:04.092 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:04.092 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:04.093 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:30:04.094 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:04.095 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:04.095 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:04.096 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:04.096 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:04.097 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:30:04.127 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:04.127 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:04.127 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:30:04.128 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:30:04.129 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:30:04.130 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:30:04.130 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:30:04.131 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:30:04.131 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:30:04.132 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:33:23.583 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:23.584 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:23.584 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:33:23.584 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 29(Long)
2020-04-10 10:33:23.587 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:33:23.587 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:23.587 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:23.587 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:23.587 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:23.588 [http-bio-8888-exec-4] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:33:23.588 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:23.588 [http-bio-8888-exec-4] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 29(Long)
2020-04-10 10:33:23.588 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:23.590 [http-bio-8888-exec-4] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 3
2020-04-10 10:33:23.590 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:23.590 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:23.591 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:23.592 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:23.593 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:23.594 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:25.021 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:25.021 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:25.021 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:25.022 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:33:25.023 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:25.023 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:25.024 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:25.024 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:25.024 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:25.025 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:28.506 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:28.506 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:28.507 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:28.507 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:28.511 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:28.512 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:28.512 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:28.513 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:28.513 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:28.514 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:29.199 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.199 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.200 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:29.200 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:33:29.201 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:29.202 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.202 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.202 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:29.202 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:29.203 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:29.866 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.866 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.866 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:29.867 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:33:29.868 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:29.868 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.868 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.869 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:29.869 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:29.870 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:29.885 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.885 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.886 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:29.886 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:33:29.887 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:29.888 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.888 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.888 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:29.888 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:29.889 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:29.919 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.919 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.919 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:29.919 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:33:29.921 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:29.921 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.921 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.922 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:29.922 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:29.923 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:29.937 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.937 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.937 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:29.938 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:33:29.939 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:29.939 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:29.940 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:29.940 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:29.940 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:29.942 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:30.498 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:30.498 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:30.498 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:30.499 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:33:30.500 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:30.501 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:30.501 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:30.502 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:30.502 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:30.503 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:30.517 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:30.517 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:30.517 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:30.518 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:33:30.519 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:30.519 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:30.519 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:30.520 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:30.520 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:30.521 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:30.535 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:30.535 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:30.536 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:30.536 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:33:30.537 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:30.538 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:30.538 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:30.538 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:30.539 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:30.540 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:32.055 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:32.055 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:32.056 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:32.056 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:32.061 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:32.062 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:32.062 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:32.062 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:32.063 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:32.064 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:32.589 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:32.589 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:32.589 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:32.589 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 29(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:32.591 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:32.592 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:32.592 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:32.592 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:32.593 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 29(Long), 1(Integer)
2020-04-10 10:33:32.594 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:33.865 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:33.865 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:33.866 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:33:33.866 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:33.866 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:33.866 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:33:33.866 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:33:33.867 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:33.868 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:33:33.868 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:33.869 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:33.869 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:33:33.870 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:33:33.870 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:33:33.870 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:33.870 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:33.871 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:33:33.871 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:33:33.871 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:33:33.877 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:33:34.652 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:34.652 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:34.652 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:33:34.652 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:33:34.654 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:33:34.655 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:34.655 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:34.655 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:33:34.656 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:33:34.658 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:33:36.547 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:36.547 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:36.547 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:33:36.547 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:33:36.549 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:36.549 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:36.549 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:33:36.549 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:36.550 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:36.550 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:36.550 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:36.550 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:33:36.550 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:33:36.552 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:36.553 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:36.554 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:33:36.554 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:36.555 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:36.556 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:36.559 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:37.896 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:37.897 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:37.897 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:37.898 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:33:37.900 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:37.900 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:37.901 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:37.901 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:37.901 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:37.903 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:38.797 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:38.797 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:38.798 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:38.798 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:33:38.799 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:33:38.800 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:38.800 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:38.800 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:38.801 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:38.802 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:39.495 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:39.495 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:39.495 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:39.495 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:33:39.496 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:39.497 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:39.497 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:39.497 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:39.497 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:39.498 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:39.515 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:39.515 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:39.515 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:39.515 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:33:39.516 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:39.517 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:39.517 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:39.517 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:39.518 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:39.519 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:39.541 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:39.541 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:39.541 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:39.542 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:33:39.543 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:39.544 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:39.544 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:39.544 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:39.544 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:39.545 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:40.516 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.517 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.517 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:40.517 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:33:40.519 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:40.519 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.519 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.520 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:40.520 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:40.522 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:40.544 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.544 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.545 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:40.545 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:33:40.546 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:40.546 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.548 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.548 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:40.548 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:40.549 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:40.562 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.562 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.562 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:40.562 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:33:40.563 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:40.564 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.565 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.565 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:40.565 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:40.567 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:33:40.582 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.582 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.582 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:33:40.583 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:33:40.584 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:33:40.585 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:33:40.585 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:33:40.585 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:33:40.586 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:33:40.587 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:34:53.728 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:34:53.728 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:34:53.729 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:34:53.729 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:34:53.729 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:34:53.729 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:34:53.730 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:34:53.731 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:34:53.732 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:34:53.732 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:34:53.733 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:34:53.733 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:34:53.733 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:34:53.733 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:34:53.733 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:34:53.734 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:34:53.734 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:34:53.734 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:34:53.735 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:34:53.738 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:36:16.295 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:36:16.311 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:36:16.447 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:36:16.804 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:36:16.827 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:36:16.865 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:36:16.901 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:36:16.905 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:36:16.943 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:36:16.944 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:36:16.958 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:36:16.958 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:36:16.958 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:36:16.958 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:36:16.959 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:36:16.959 [http-bio-8888-exec-9] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:36:16.959 [http-bio-8888-exec-9] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:36:16.959 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:36:16.965 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:36:16.966 [http-bio-8888-exec-9] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:36:43.513 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:36:43.515 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:36:43.516 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:36:43.517 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:37:58.752 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:37:58.753 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:58.753 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:58.754 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:37:58.755 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:37:58.756 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:58.757 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:58.758 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:37:58.778 [http-bio-8888-exec-2] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:37:58.800 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:37:58.806 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:37:58.809 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:58.810 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:58.811 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:37:58.815 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:37:58.821 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:37:59.528 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:59.528 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:59.533 [http-bio-8888-exec-1] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:37:59.536 [http-bio-8888-exec-1] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:37:59.540 [http-bio-8888-exec-1] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:37:59.540 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:59.541 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:59.541 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:37:59.542 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:37:59.551 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:37:59.594 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:59.594 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:59.596 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:37:59.598 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:37:59.606 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:37:59.617 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:37:59.617 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:37:59.627 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:37:59.634 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:37:59.640 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:00.993 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:00.993 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:00.995 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:00.997 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:38:01.001 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 2
2020-04-10 10:38:01.002 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.002 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.003 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.005 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.007 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.552 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.553 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.553 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.554 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:38:01.557 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.559 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.559 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.561 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.564 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.568 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.742 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.742 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.743 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.744 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:38:01.747 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.750 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.750 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.751 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.752 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.754 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.770 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.770 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.771 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.772 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:38:01.774 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.775 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.775 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.776 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.776 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.778 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.802 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.802 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.803 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.804 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:38:01.806 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.807 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.807 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.808 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.809 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.811 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.836 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.836 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.837 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.838 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:38:01.841 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.842 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.842 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.843 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.844 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.847 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.869 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.869 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.870 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.871 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:38:01.873 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.874 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.874 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.875 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.876 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.877 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:01.903 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.904 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.905 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:01.905 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:38:01.907 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:01.909 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:01.909 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:01.910 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:01.910 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:01.912 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:02.154 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:02.154 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:02.155 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:02.156 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:38:02.158 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:02.160 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:02.160 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:02.160 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:02.161 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:02.163 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:02.185 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:02.185 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:02.186 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:02.187 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:38:02.188 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 10:38:02.189 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:02.189 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:02.190 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:02.191 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:02.192 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:14.035 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:14.036 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:14.036 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:38:14.037 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:38:14.041 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:38:14.045 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:14.045 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:14.046 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:38:14.047 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:38:14.050 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:38:15.846 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:15.847 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:15.847 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:38:15.848 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 10(Long)
2020-04-10 10:38:15.851 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:15.851 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:15.851 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:38:15.852 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:15.853 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:15.854 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:15.854 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:38:15.855 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 10(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:38:15.856 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:38:15.860 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:38:15.860 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 1
2020-04-10 10:38:15.862 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:15.862 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:15.863 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:15.863 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 10(Long), 1(Integer)
2020-04-10 10:38:15.865 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:20.046 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:20.046 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:20.047 [http-bio-8888-exec-4] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 10:38:20.047 [http-bio-8888-exec-4] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 10:38:20.053 [http-bio-8888-exec-4] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 10:38:20.054 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.HeadLineMapper.queryHeadLine] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:20.054 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:20.056 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==>  Preparing: SELECT line_id, line_name, line_link, line_img, priority, enable_status, create_time, last_edit_time FROM tb_head_line WHERE enable_status=? ORDER BY priority DESC 
2020-04-10 10:38:20.057 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - ==> Parameters: 1(Integer)
2020-04-10 10:38:20.062 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.HeadLineMapper.queryHeadLine - <==      Total: 4
2020-04-10 10:38:21.500 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:21.500 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:21.501 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:38:21.501 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:21.502 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:21.502 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:38:21.502 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:21.503 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:38:21.504 [http-bio-8888-exec-2] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:38:21.505 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:21.507 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:21.508 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:38:21.509 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:38:21.510 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:38:21.511 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:21.512 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:38:21.512 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:21.512 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:21.513 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:21.515 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:45.799 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:45.800 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:45.800 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is not null and parent_id = ? order by priority desc 
2020-04-10 10:38:45.801 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 12(Long)
2020-04-10 10:38:45.803 [http-bio-8888-exec-8] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 2
2020-04-10 10:38:45.804 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:45.804 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:45.805 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 10:38:45.805 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 10:38:45.807 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 10:38:45.815 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:45.816 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:45.817 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 10:38:45.819 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 12(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:38:45.823 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 10:38:45.824 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:45.824 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:45.825 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ and s.shop_category_id in(select shop_category_id from tb_shop_category where parent_id=?) /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 10:38:45.826 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 12(Long), 1(Integer)
2020-04-10 10:38:45.828 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 10:38:49.069 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:38:49.069 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:38:49.070 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:38:49.070 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:39:19.686 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:39:19.688 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:39:19.690 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:39:19.691 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:39:19.688 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:39:19.693 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:39:19.693 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:39:19.693 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:39:19.695 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:39:19.695 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:39:19.698 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:39:19.699 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:39:19.700 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:39:19.706 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:39:19.707 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:39:19.709 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:40:18.234 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:40:18.234 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:40:18.235 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:40:18.235 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:40:18.242 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:40:18.243 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:40:18.243 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:40:18.243 [http-bio-8888-exec-6] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:40:18.245 [http-bio-8888-exec-6] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:40:18.248 [http-bio-8888-exec-6] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:40:24.657 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:40:24.658 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:40:24.658 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:40:24.662 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:40:24.664 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:40:24.665 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:40:24.666 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:40:24.666 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:40:24.667 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:40:24.668 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:46:29.220 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:46:29.224 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:46:29.324 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:46:30.150 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:46:30.245 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:46:30.262 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:46:30.263 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:46:30.265 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:46:30.267 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:46:30.273 [http-bio-8888-exec-8] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:46:40.205 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:46:40.206 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:46:40.209 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:46:40.219 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:46:40.227 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:46:40.231 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:46:40.232 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:46:40.233 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:46:40.235 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:46:40.239 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:47:08.463 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:47:08.469 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:47:08.474 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:47:08.477 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:47:08.519 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:47:08.535 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:47:08.538 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:47:08.549 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:47:08.556 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:47:08.588 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:48:00.146 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:48:00.153 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:48:00.160 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:48:00.162 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:48:00.166 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 1
2020-04-10 10:48:00.168 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:48:00.168 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:48:00.169 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:48:00.170 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:48:00.173 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:48:24.077 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:48:24.078 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:48:24.079 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:48:24.080 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:48:24.083 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:48:24.084 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:48:24.085 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:48:24.085 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:48:24.087 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:48:24.089 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:48:39.325 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:48:39.325 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:48:39.326 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:48:39.327 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:48:39.329 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:48:39.330 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:48:39.331 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:48:39.331 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:48:39.332 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:48:39.335 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:16.661 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:16.666 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:16.737 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:49:17.053 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:49:17.137 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:49:17.162 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:17.163 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:17.163 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:49:17.164 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:49:17.176 [http-bio-8888-exec-3] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:49:19.325 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:19.325 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:19.330 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:19.331 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:49:19.342 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:49:19.345 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:19.346 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:19.346 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:19.349 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:49:19.355 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:47.002 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:47.003 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:47.005 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:47.006 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:49:47.010 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:49:47.013 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:47.013 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:47.015 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:47.016 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:47.018 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:48.719 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:48.719 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:48.721 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:48.721 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:49:48.723 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 1
2020-04-10 10:49:48.725 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:48.725 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:48.726 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:48.727 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:48.729 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:48.952 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:48.952 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:48.953 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:48.954 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:49:48.956 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:48.957 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:48.958 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:48.959 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:48.962 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:48.964 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:48.986 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:48.986 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:48.987 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:48.987 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:49:48.989 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:48.990 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:48.991 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:48.991 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:48.992 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:48.995 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:49.016 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.016 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.017 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:49.018 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:49:49.019 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:49.021 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.022 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.022 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:49.023 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:49.025 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:49.050 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.050 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.051 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:49.052 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:49:49.054 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:49.056 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.056 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.058 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:49.059 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:49.064 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:49.085 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.085 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.086 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:49.087 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:49:49.090 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:49.091 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.091 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.091 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:49.092 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:49.094 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:49.485 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.485 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.486 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:49.486 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:49:49.488 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:49.489 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.490 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.491 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:49.491 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:49.494 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:49.517 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.517 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.518 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:49.519 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:49:49.520 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:49.521 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:49.522 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:49.523 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:49.523 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:49.525 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.167 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.168 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.168 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.170 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:49:51.172 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 2
2020-04-10 10:49:51.173 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.173 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.174 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.175 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.177 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.217 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.217 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.218 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.219 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:49:51.220 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:51.221 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.221 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.222 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.223 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.224 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.500 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.501 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.501 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.502 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:49:51.506 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:51.507 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.507 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.511 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.512 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.517 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.571 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.571 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.572 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.572 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:49:51.574 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:51.575 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.576 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.578 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.578 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.580 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.605 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.605 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.606 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.607 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:49:51.609 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:51.612 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.612 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.613 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.613 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.615 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.638 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.638 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.639 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.640 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:49:51.641 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:51.643 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.644 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.645 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.646 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.648 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:51.672 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.672 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.673 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:51.673 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:49:51.675 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:51.676 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:51.677 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:51.677 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:51.678 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:51.680 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:52.185 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:52.185 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:52.186 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:52.187 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:49:52.189 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:52.190 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:52.190 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:52.191 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:52.192 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:52.194 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:52.216 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:52.217 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:52.217 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:52.218 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:49:52.219 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:52.220 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:52.220 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:52.221 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:52.221 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:52.223 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:52.250 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:52.251 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:52.251 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:52.253 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:49:52.258 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:52.260 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:52.260 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:52.261 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:52.261 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 10:49:52.264 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:53.453 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:53.453 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:53.453 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:53.454 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:49:53.455 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:53.456 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:53.456 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:53.457 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:53.457 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:53.459 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:53.483 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:53.484 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:53.484 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:53.485 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:49:53.486 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:53.487 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:53.487 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:53.487 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:53.488 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:53.489 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.199 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.199 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.200 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.200 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:49:54.201 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.202 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.202 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.203 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.204 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.205 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.217 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.217 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.217 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.218 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:49:54.219 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.219 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.220 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.220 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.221 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.222 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.249 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.249 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.250 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.250 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:49:54.252 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.254 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.254 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.255 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.255 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.257 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.282 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.283 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.283 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.284 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:49:54.285 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.286 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.286 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.287 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.288 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.289 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.317 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.317 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.318 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.318 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:49:54.319 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.320 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.320 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.321 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.321 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.322 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.349 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.350 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.350 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.351 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:49:54.352 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.353 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.353 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.353 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.354 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.355 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.383 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.384 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.384 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.385 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:49:54.386 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.387 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.388 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.388 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.389 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.390 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.417 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.417 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.418 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.418 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:49:54.420 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.421 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.421 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.422 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.422 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.424 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.449 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.449 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.450 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.450 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:49:54.451 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.452 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.452 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.453 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.453 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.455 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.483 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.483 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.484 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.484 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:49:54.485 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.486 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.486 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.486 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.487 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.488 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:54.505 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.505 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.506 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:54.506 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:49:54.508 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:54.509 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:54.509 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:54.510 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:54.511 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 10:49:54.512 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:55.268 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.268 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.268 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:55.269 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:49:55.271 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:49:55.272 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.272 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.272 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:55.273 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:55.274 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:55.650 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.651 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.651 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:55.651 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:49:55.653 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 1
2020-04-10 10:49:55.654 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.655 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.655 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:55.656 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:55.657 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:55.920 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.920 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.920 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:55.921 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:49:55.923 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:55.924 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.924 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.925 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:55.926 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:55.929 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:55.949 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.950 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.950 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:55.951 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:49:55.952 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:55.953 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.953 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.954 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:55.955 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:55.956 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:55.983 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.983 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.983 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:55.984 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:49:55.985 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:55.986 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:55.987 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:55.987 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:55.987 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:55.988 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.015 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.015 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.015 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.016 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:49:56.017 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.018 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.018 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.018 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.019 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.020 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.635 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.635 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.635 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.636 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:49:56.637 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.638 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.638 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.638 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.639 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.640 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.666 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.666 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.666 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.667 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:49:56.668 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.668 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.669 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.669 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.669 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.670 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.682 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.682 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.682 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.683 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:49:56.684 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.685 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.685 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.686 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.686 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.688 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.716 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.716 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.717 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.717 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:49:56.719 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.719 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.720 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.720 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.721 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.722 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.747 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.748 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.748 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.748 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:49:56.749 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.750 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.750 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.751 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.752 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.753 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.765 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.766 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.766 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.767 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:49:56.768 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.769 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.769 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.770 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.770 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.771 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:49:56.800 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.800 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.800 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:49:56.801 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:49:56.802 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:49:56.803 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:49:56.803 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:49:56.804 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:49:56.804 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:49:56.805 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:08.665 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.665 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.665 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:08.666 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 39(Integer), 3(Integer)
2020-04-10 10:50:08.667 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:08.668 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.668 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.669 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:08.669 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:08.671 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:08.696 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.697 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.697 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:08.697 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 42(Integer), 3(Integer)
2020-04-10 10:50:08.699 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:08.700 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.700 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.700 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:08.701 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:08.702 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:08.733 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.734 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.734 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:08.735 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 45(Integer), 3(Integer)
2020-04-10 10:50:08.736 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:08.737 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.738 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.738 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:08.739 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:08.740 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:08.914 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.914 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.914 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:08.915 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 48(Integer), 3(Integer)
2020-04-10 10:50:08.917 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:08.917 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.918 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.918 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:08.919 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:08.921 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:08.966 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.966 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.967 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:08.967 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 51(Integer), 3(Integer)
2020-04-10 10:50:08.969 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:08.970 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.971 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.971 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:08.972 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:08.973 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:08.996 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:08.997 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:08.997 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:08.997 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 54(Integer), 3(Integer)
2020-04-10 10:50:09.000 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:09.001 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.001 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.002 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:09.003 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:09.005 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:09.895 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.895 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.895 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:09.896 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 57(Integer), 3(Integer)
2020-04-10 10:50:09.897 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:09.898 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.898 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.898 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:09.898 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:09.899 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:09.910 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.911 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.911 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:09.911 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 60(Integer), 3(Integer)
2020-04-10 10:50:09.912 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:09.913 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.913 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.914 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:09.914 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:09.915 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:09.929 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.930 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.930 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:09.930 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 63(Integer), 3(Integer)
2020-04-10 10:50:09.932 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:09.933 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.933 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.933 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:09.934 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:09.936 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:09.962 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.962 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.962 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:09.963 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 66(Integer), 3(Integer)
2020-04-10 10:50:09.964 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:09.965 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:09.965 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:09.965 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:09.966 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:09.967 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:12.425 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.425 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.426 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:12.426 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 69(Integer), 3(Integer)
2020-04-10 10:50:12.428 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:12.429 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.429 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.429 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:12.430 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:12.431 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:12.461 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.461 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.462 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:12.462 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 72(Integer), 3(Integer)
2020-04-10 10:50:12.464 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:12.465 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.465 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.465 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:12.465 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:12.466 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:12.493 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.494 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.494 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:12.495 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 75(Integer), 3(Integer)
2020-04-10 10:50:12.496 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:12.497 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.497 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.497 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:12.498 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:12.499 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:12.528 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.529 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.529 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:12.530 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 78(Integer), 3(Integer)
2020-04-10 10:50:12.531 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:12.532 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:12.532 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:12.532 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:12.533 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:12.534 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:20.504 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:20.504 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:20.505 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%å¤§ç½%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:20.505 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:50:20.507 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:20.508 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:20.508 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:20.508 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%å¤§ç½%' and enable_status=? 
2020-04-10 10:50:20.509 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:20.510 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:28.588 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:28.588 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:28.589 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:28.589 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:50:28.591 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:28.591 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:28.592 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:28.592 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:50:28.593 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:28.594 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:41.923 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:41.924 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:41.924 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:41.924 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:41.925 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:41.925 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:50:41.926 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:41.927 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:50:41.931 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:50:41.932 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:50:41.932 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:41.932 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:41.932 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:41.932 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:41.933 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:41.933 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:41.933 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 10:50:41.936 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:41.943 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:41.946 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.083 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.083 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.084 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.084 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:50:43.086 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.087 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.087 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.087 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.088 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.089 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.114 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.115 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.115 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.115 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:50:43.117 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.117 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.118 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.118 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.118 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.120 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.180 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.181 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.181 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.182 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 10:50:43.183 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.184 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.184 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.185 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.186 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.187 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.217 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.217 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.217 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.218 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 10:50:43.220 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.220 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.221 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.221 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.222 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.224 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.247 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.248 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.248 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.248 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 10:50:43.249 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.250 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.250 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.251 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.251 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.253 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.265 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.265 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.266 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.266 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 10:50:43.267 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.268 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.268 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.268 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.268 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.270 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.281 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.282 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.282 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.283 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 10:50:43.284 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.285 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.285 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.285 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.286 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.287 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.303 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.304 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.304 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.305 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 10:50:43.306 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.308 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.309 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.309 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.310 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.311 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.349 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.349 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.349 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.350 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 10:50:43.351 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.352 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.352 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.352 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.353 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.354 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.366 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.367 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.368 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.369 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 10:50:43.370 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.371 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.372 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.372 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.372 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.374 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.485 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.485 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.486 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.486 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 10:50:43.488 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.489 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.489 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.489 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.490 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.492 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.516 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.516 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.516 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.517 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 39(Integer), 3(Integer)
2020-04-10 10:50:43.518 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.519 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.519 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.519 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.520 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.521 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.536 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.536 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.536 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.537 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 42(Integer), 3(Integer)
2020-04-10 10:50:43.538 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.539 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.539 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.540 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.541 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.542 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:43.566 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.567 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.567 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:43.568 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 45(Integer), 3(Integer)
2020-04-10 10:50:43.570 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:43.571 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:43.571 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:43.572 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:50:43.572 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:43.573 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:48.390 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:48.390 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:48.390 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%å¤§ç½%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:48.391 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:50:48.392 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:48.392 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:48.392 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:48.393 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%å¤§ç½%' and enable_status=? 
2020-04-10 10:50:48.393 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:48.394 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:50:52.239 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:52.239 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:52.239 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:50:52.240 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:50:52.242 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:50:52.242 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:50:52.243 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:50:52.243 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:50:52.244 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:50:52.245 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:52:06.271 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:06.275 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:06.325 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:52:06.553 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:52:06.605 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:52:06.620 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:06.621 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:06.622 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%ä¼è´¨%' and enable_status=? 
2020-04-10 10:52:06.623 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:52:06.630 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:52:12.336 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:12.339 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:12.339 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 10:52:12.341 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:52:12.347 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 10:52:12.351 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:12.352 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:12.352 [http-bio-8888-exec-10] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 10:52:12.353 [http-bio-8888-exec-10] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 10:52:12.361 [http-bio-8888-exec-10] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 10:52:30.394 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:30.394 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:30.396 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:52:30.398 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 10:52:30.404 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:52:30.406 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:30.406 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:30.407 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:52:30.409 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:52:30.411 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:52:40.765 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:40.765 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:40.769 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:52:40.771 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 10:52:40.776 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 10:52:40.777 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:40.778 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:40.778 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:52:40.779 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:52:40.781 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:52:55.675 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:55.676 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:55.678 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:52:55.681 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 10:52:55.683 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:52:55.685 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:52:55.685 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:52:55.686 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:52:55.687 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:52:55.690 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 10:53:37.808 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:53:37.810 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:53:37.820 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 10:53:37.825 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 10:53:37.849 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 10:53:37.857 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 10:53:37.858 [http-bio-8888-exec-8] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 10:53:37.862 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 10:53:37.867 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 10:53:37.882 [http-bio-8888-exec-8] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:04:44.367 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:04:44.371 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:04:44.415 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 11:04:45.160 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 11:04:45.240 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 11:04:45.271 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:04:45.271 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:04:45.272 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 11:04:45.275 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 11:04:45.282 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 11:04:59.158 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:04:59.158 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:04:59.163 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:04:59.164 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:04:59.177 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:04:59.179 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:04:59.180 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:04:59.181 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:04:59.182 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:04:59.184 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:05:09.987 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:05:09.989 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:05:09.990 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:05:09.991 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:05:09.995 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:05:09.997 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:05:09.998 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:05:09.999 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:05:10.000 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:05:10.002 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:05:37.676 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:05:37.676 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:05:37.677 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%大白%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:05:37.678 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:05:37.681 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 2
2020-04-10 11:05:37.682 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:05:37.683 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:05:37.683 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%大白%' and enable_status=? 
2020-04-10 11:05:37.684 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:05:37.686 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:05.619 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:05.621 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:05.623 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%大白%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:05.625 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:05.627 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:05.630 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:05.630 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:05.631 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%大白%' and enable_status=? 
2020-04-10 11:06:05.633 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:05.635 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:12.604 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:12.604 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:12.605 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%大白%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:12.606 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:12.607 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:12.608 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:12.609 [http-bio-8888-exec-9] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:12.610 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%大白%' and enable_status=? 
2020-04-10 11:06:12.611 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:12.613 [http-bio-8888-exec-9] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:16.811 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:16.811 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:16.812 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 11:06:16.812 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 11:06:16.815 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 11:06:16.816 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:16.816 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:16.816 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 11:06:22.743 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 11:06:22.745 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:22.746 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:22.747 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:22.748 [http-bio-8888-exec-7] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 11:06:22.750 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:22.753 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:06:22.755 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:22.755 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:22.758 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:22.760 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:22.763 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:29.686 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopCategoryMapper.queryShopCategory] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:29.686 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:29.689 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==>  Preparing: select shop_category_id,shop_category_name,shop_category_desc,shop_category_img, priority,create_time,last_edit_time,parent_id from tb_shop_category WHERE 1=1 and parent_id is null order by priority desc 
2020-04-10 11:06:29.691 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - ==> Parameters: 
2020-04-10 11:06:29.696 [http-bio-8888-exec-7] DEBUG c.xyd.mapper.ShopCategoryMapper.queryShopCategory - <==      Total: 6
2020-04-10 11:06:29.697 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.AreaMapper.queryArea] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:29.698 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:29.698 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==>  Preparing: SELECT * FROM TB_AREA ORDER BY PRIORITY DESC 
2020-04-10 11:06:29.699 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - ==> Parameters: 
2020-04-10 11:06:29.699 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:29.699 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:29.700 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:29.702 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:29.702 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.AreaMapper.queryArea - <==      Total: 2
2020-04-10 11:06:29.712 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 11:06:29.714 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:29.716 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:29.717 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:29.718 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:29.722 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:30.832 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:30.833 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:30.835 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:30.837 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:30.842 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 3
2020-04-10 11:06:30.843 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:30.844 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:30.844 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:30.846 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:30.848 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.163 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.163 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.163 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.164 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:31.166 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.167 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.168 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.168 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.169 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.171 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.194 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.194 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.194 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.195 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:31.196 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.197 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.198 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.198 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.199 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.200 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.544 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.545 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.546 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.547 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:31.549 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.550 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.551 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.551 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.552 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.555 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.578 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.578 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.578 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.579 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 15(Integer), 3(Integer)
2020-04-10 11:06:31.580 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.581 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.581 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.582 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.583 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.584 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.611 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.611 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.612 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.612 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 18(Integer), 3(Integer)
2020-04-10 11:06:31.614 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.615 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.615 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.616 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.616 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.618 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.645 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.645 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.646 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.647 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 21(Integer), 3(Integer)
2020-04-10 11:06:31.648 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.650 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.650 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.651 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.651 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.653 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.678 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.679 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.679 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.680 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 24(Integer), 3(Integer)
2020-04-10 11:06:31.681 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.682 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.682 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.683 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.683 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.685 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.712 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.712 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.713 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.714 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 27(Integer), 3(Integer)
2020-04-10 11:06:31.715 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.716 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.717 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.717 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.718 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.720 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.743 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.744 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.744 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.745 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 30(Integer), 3(Integer)
2020-04-10 11:06:31.746 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.747 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.747 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.748 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.749 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:31.750 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:31.994 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.995 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.995 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:31.996 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 33(Integer), 3(Integer)
2020-04-10 11:06:31.997 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:31.998 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:31.998 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:31.999 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:31.999 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:32.000 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:32.027 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.027 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.027 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:32.028 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 36(Integer), 3(Integer)
2020-04-10 11:06:32.029 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:32.030 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.030 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.031 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:32.032 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:32.034 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:32.059 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.060 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.060 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:32.061 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 39(Integer), 3(Integer)
2020-04-10 11:06:32.062 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:32.063 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.063 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.063 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:32.064 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:32.065 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:32.077 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.077 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.078 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:32.078 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 42(Integer), 3(Integer)
2020-04-10 11:06:32.080 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:32.081 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.081 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.082 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:32.083 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:32.084 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:32.110 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.110 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.110 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:32.111 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 45(Integer), 3(Integer)
2020-04-10 11:06:32.112 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:32.113 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.113 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.114 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:32.114 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:32.116 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:32.127 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.127 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.128 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE /*店铺类别*/ 1=1 /*依据店铺父类别id查询 子类别店铺*/ /*店铺区域*/ /*店铺名字模糊查询*/ and s.shop_name like '%%' /*店铺状态查询*/ and s.enable_status=? /*店铺人员信息查询*/ AND s.area_id=a.area_id AND s.shop_category_id=sc.shop_category_id ORDER BY s.priority desc LIMIT ?,? 
2020-04-10 11:06:32.129 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - ==> Parameters: 1(Integer), 48(Integer), 3(Integer)
2020-04-10 11:06:32.130 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopList - <==      Total: 0
2020-04-10 11:06:32.131 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryShopCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:32.132 [http-bio-8888-exec-3] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:32.132 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==>  Preparing: SELECT count(*) FROM tb_shop s WHERE 1=1 /*店铺类别*/ /*依据店铺父类别id查询*/ /*店铺区域*/ /*店铺名字模糊查询*/ AND s.shop_name like '%%' /*店铺状态查询*/ AND s.enable_status=? /*店铺人员信息查询*/ 
2020-04-10 11:06:32.133 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - ==> Parameters: 1(Integer)
2020-04-10 11:06:32.134 [http-bio-8888-exec-3] DEBUG com.xyd.mapper.ShopMapper.queryShopCount - <==      Total: 1
2020-04-10 11:06:40.395 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ShopMapper.queryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:40.395 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:40.396 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==>  Preparing: SELECT s.shop_id, s.shop_name, s.shop_desc, s.shop_addr, s.phone, s.shop_img, s.priority, s.last_edit_time, s.enable_status, s.advice, sc.shop_category_id, sc.shop_category_name, a.area_id, a.area_name FROM tb_shop s, tb_shop_category sc, tb_area a WHERE a.area_id=s.area_id AND sc.shop_category_id = s.shop_category_id AND s.shop_id=? 
2020-04-10 11:06:40.397 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - ==> Parameters: 28(Long)
2020-04-10 11:06:40.402 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ShopMapper.queryByShopId - <==      Total: 1
2020-04-10 11:06:40.403 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:40.403 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:40.404 [http-bio-8888-exec-1] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-04-10 11:06:40.404 [http-bio-8888-exec-1] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 28(Long)
2020-04-10 11:06:40.413 [http-bio-8888-exec-1] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 6
2020-04-10 11:06:40.430 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:40.430 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:40.431 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:40.432 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:40.435 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:06:40.436 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:40.439 [http-bio-8888-exec-7] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:40.440 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:40.441 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:40.443 [http-bio-8888-exec-7] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:41.610 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:41.610 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:41.610 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:41.611 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:41.617 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:06:41.618 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:41.619 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:41.619 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:41.620 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:41.622 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.691 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.691 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.691 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.692 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:42.694 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.695 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.695 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.696 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.696 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.698 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.725 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.725 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.725 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.726 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:42.727 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.728 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.728 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.729 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.729 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.730 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.757 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.757 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.758 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.758 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:42.760 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.761 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.761 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.762 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.762 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.764 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.800 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.800 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.801 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.801 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 11:06:42.803 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.804 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.804 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.804 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.805 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.806 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.827 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.828 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.828 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.829 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 11:06:42.830 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.831 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.831 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.831 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.832 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.834 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.856 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.856 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.857 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.857 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 11:06:42.858 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.859 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.859 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.860 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.860 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.861 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.872 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.872 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.873 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.873 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 11:06:42.875 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.875 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.875 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.876 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.876 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.877 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:42.890 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.890 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.891 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:42.891 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 11:06:42.892 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:42.893 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:42.893 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:42.894 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:42.894 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:42.895 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:43.219 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:43.220 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:43.221 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:43.221 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 11:06:43.223 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:43.224 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:43.224 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:43.224 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:43.225 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:43.226 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:43.240 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:43.240 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:43.240 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:43.241 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 11:06:43.242 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:43.243 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:43.243 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:43.243 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:43.244 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:43.245 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:43.258 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:43.258 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:43.259 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:43.260 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 11:06:43.261 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:43.262 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:43.262 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:43.263 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:43.263 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 1(Integer)
2020-04-10 11:06:43.265 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:44.390 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:44.390 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:44.391 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:44.392 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:44.395 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:06:44.396 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:44.396 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:44.396 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:44.397 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:44.398 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:44.773 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:44.774 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:44.774 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:44.774 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:44.776 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 1
2020-04-10 11:06:44.777 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:44.777 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:44.778 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:44.779 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:44.780 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.055 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.056 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.056 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.057 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:45.058 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.059 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.059 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.060 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.061 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.062 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.088 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.088 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.089 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.089 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:45.090 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.091 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.091 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.092 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.092 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.093 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.105 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.105 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.105 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.106 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:45.107 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.108 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.108 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.108 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.109 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.110 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.125 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.125 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.125 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.126 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 11:06:45.128 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.129 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.129 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.130 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.130 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.134 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.157 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.157 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.158 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.158 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 11:06:45.160 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.161 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.161 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.162 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.162 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.164 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.722 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.723 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.723 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.723 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 11:06:45.724 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.725 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.725 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.726 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.726 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.728 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.740 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.740 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.740 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.741 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 11:06:45.742 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.743 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.743 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.743 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.744 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.745 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:45.772 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.773 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.773 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:45.773 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 11:06:45.775 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:45.776 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:45.776 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:45.776 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:45.777 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:45.778 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:46.559 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:46.559 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:46.560 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:46.560 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:46.562 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 2
2020-04-10 11:06:46.563 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:46.565 [http-bio-8888-exec-2] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:46.565 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:46.566 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:46.567 [http-bio-8888-exec-2] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:47.025 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.025 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.026 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:47.026 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:47.028 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:47.029 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.029 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.029 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:47.030 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:47.032 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:47.055 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.055 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.056 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:47.056 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:47.058 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:47.058 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.059 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.059 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:47.060 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:47.061 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:47.074 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.074 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.075 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:47.075 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:47.077 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:47.078 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.078 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.078 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:47.079 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:47.080 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:47.107 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.108 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.108 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:47.109 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:47.110 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:47.111 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:47.111 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:47.111 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:47.112 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:47.115 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:48.801 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:48.802 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:48.802 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:48.803 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 7(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:48.804 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:48.805 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:48.805 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:48.805 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:48.806 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 7(Long), 1(Integer)
2020-04-10 11:06:48.807 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:48.820 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:48.820 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:48.821 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:48.821 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 7(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:48.822 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:48.823 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:48.823 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:48.824 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:48.824 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 7(Long), 1(Integer)
2020-04-10 11:06:48.826 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:50.621 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:50.622 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:50.622 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:50.623 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:50.624 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:50.625 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:50.625 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:50.626 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:50.626 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 11:06:50.628 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:50.756 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:50.756 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:50.757 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:50.757 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 5(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:50.759 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:50.760 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:50.760 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:50.760 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:50.761 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 5(Long), 1(Integer)
2020-04-10 11:06:50.762 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:52.620 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:52.620 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:52.620 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:52.621 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:52.623 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 2
2020-04-10 11:06:52.623 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:52.624 [http-bio-8888-exec-10] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:52.624 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:52.624 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:52.626 [http-bio-8888-exec-10] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:52.656 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:52.656 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:52.657 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:52.657 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:52.659 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:52.660 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:52.660 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:52.660 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:52.661 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:52.662 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:53.536 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.536 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.537 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:53.538 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:53.539 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:53.540 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.540 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.540 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:53.541 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:53.542 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:53.553 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.553 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.553 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:53.553 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:53.555 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:53.555 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.556 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.556 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:53.556 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:53.558 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:53.570 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.570 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.571 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:53.571 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:53.573 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:53.574 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.574 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.574 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:53.575 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:53.576 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:53.603 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.603 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.604 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:53.604 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 11:06:53.606 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:53.606 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:53.606 [http-bio-8888-exec-1] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:53.607 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:53.608 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:53.609 [http-bio-8888-exec-1] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:54.717 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:54.718 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:54.719 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:54.719 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:54.721 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-10 11:06:54.722 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:54.722 [http-bio-8888-exec-6] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:54.723 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:54.723 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:54.724 [http-bio-8888-exec-6] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:55.568 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.569 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.569 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:55.569 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:55.571 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 1
2020-04-10 11:06:55.571 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.572 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.572 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:55.573 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:55.574 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:55.902 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.903 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.903 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:55.903 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:55.905 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:55.906 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.906 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.907 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:55.907 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:55.909 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:55.934 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.934 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.935 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:55.935 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:55.936 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:55.937 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.937 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.937 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:55.938 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:55.939 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:55.953 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.953 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.953 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:55.954 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:55.955 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:55.956 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.956 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.956 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:55.957 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:55.958 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:55.984 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.985 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.985 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:55.985 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 11:06:55.986 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:55.987 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:55.987 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:55.987 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:55.988 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:55.989 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.001 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.001 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.001 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.002 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 11:06:56.003 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.004 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.004 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.004 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.005 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.006 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.069 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.069 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.069 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.070 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 11:06:56.071 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.072 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.072 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.072 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.073 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.074 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.089 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.089 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.089 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.090 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 11:06:56.092 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.093 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.093 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.093 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.094 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.096 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.121 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.121 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.121 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.122 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 27(Integer), 3(Integer)
2020-04-10 11:06:56.123 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.124 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.124 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.124 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.125 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.126 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.151 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.151 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.152 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.152 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 30(Integer), 3(Integer)
2020-04-10 11:06:56.153 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.154 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.154 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.154 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.155 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.156 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.168 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.168 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.168 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.169 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 33(Integer), 3(Integer)
2020-04-10 11:06:56.170 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.171 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.171 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.171 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.171 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.172 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.184 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.184 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.184 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.185 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 36(Integer), 3(Integer)
2020-04-10 11:06:56.186 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.186 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.187 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.187 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.188 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.189 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.201 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.202 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.202 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.202 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 39(Integer), 3(Integer)
2020-04-10 11:06:56.203 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.204 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.204 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.205 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.205 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.206 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.217 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.217 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.218 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.218 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 42(Integer), 3(Integer)
2020-04-10 11:06:56.219 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.220 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.220 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.221 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.221 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.223 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.235 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.235 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.235 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.236 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 45(Integer), 3(Integer)
2020-04-10 11:06:56.237 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.238 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.238 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.238 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.238 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.240 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.253 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.254 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.254 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.255 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 48(Integer), 3(Integer)
2020-04-10 11:06:56.256 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.257 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.257 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.258 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.258 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.259 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:56.288 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.288 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.289 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:56.289 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 4(Long), 1(Integer), 51(Integer), 3(Integer)
2020-04-10 11:06:56.291 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:56.292 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:56.292 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:56.293 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:56.293 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 4(Long), 1(Integer)
2020-04-10 11:06:56.296 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:57.030 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:57.030 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:57.031 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:57.032 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 9(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:57.034 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:57.037 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:57.037 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:57.038 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:57.039 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 9(Long), 1(Integer)
2020-04-10 11:06:57.041 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:58.252 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:58.253 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:58.253 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:58.254 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 8(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:58.255 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:58.256 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:58.256 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:58.256 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:58.257 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 8(Long), 1(Integer)
2020-04-10 11:06:58.258 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:58.753 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:58.754 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:58.754 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:58.755 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 0(Integer), 3(Integer)
2020-04-10 11:06:58.756 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 2
2020-04-10 11:06:58.757 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:58.757 [http-bio-8888-exec-5] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:58.758 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:58.758 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:58.760 [http-bio-8888-exec-5] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.301 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.301 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.301 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.302 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 3(Integer), 3(Integer)
2020-04-10 11:06:59.303 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.304 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.304 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.304 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.305 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.306 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.333 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.333 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.333 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.334 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 6(Integer), 3(Integer)
2020-04-10 11:06:59.336 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.336 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.337 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.337 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.338 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.340 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.367 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.368 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.368 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.368 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 9(Integer), 3(Integer)
2020-04-10 11:06:59.370 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.370 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.371 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.371 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.372 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.373 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.384 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.384 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.384 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.385 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 12(Integer), 3(Integer)
2020-04-10 11:06:59.386 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.387 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.387 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.387 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.388 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.389 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.834 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.834 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.834 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.835 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 15(Integer), 3(Integer)
2020-04-10 11:06:59.836 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.836 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.837 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.837 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.837 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.839 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.853 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.853 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.853 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.854 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 18(Integer), 3(Integer)
2020-04-10 11:06:59.855 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.856 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.856 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.857 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.857 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.858 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.884 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.884 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.885 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.885 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 21(Integer), 3(Integer)
2020-04-10 11:06:59.886 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.887 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.887 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.888 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.888 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.890 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-10 11:06:59.916 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.916 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.917 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? ORDER BY priority DESC LIMIT ?,? 
2020-04-10 11:06:59.917 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 28(Long), 6(Long), 1(Integer), 24(Integer), 3(Integer)
2020-04-10 11:06:59.918 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 0
2020-04-10 11:06:59.919 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-10 11:06:59.919 [http-bio-8888-exec-4] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-10 11:06:59.919 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and shop_id=? and product_category_id=? and product_name like '%%' and enable_status=? 
2020-04-10 11:06:59.920 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 28(Long), 6(Long), 1(Integer)
2020-04-10 11:06:59.921 [http-bio-8888-exec-4] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
