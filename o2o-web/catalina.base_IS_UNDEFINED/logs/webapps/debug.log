2020-04-04 11:37:24.645 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductImgMapper.queryProductImgByProductId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 11:37:24.675 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 11:37:24.708 [main] DEBUG c.x.m.ProductImgMapper.queryProductImgByProductId - ==>  Preparing: SELECT pm.product_img_id, img_addr, img_desc, priority, create_time, product_id FROM tb_product_img pm WHERE pm.product_id=? 
2020-04-04 11:37:24.937 [main] DEBUG c.x.m.ProductImgMapper.queryProductImgByProductId - ==> Parameters: 10(Long)
2020-04-04 11:37:24.984 [main] DEBUG c.x.m.ProductImgMapper.queryProductImgByProductId - <==      Total: 2
2020-04-04 12:34:21.232 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductById] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 12:34:21.235 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 12:34:21.275 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==>  Preparing: SELECT p.product_id, p.product_name, p.product_desc, p.img_addr, p.normal_price, p.promotion_price, p.priority, p.create_time, p.last_edit_time, p.enable_status, p.product_category_id, p.shop_id, pm.product_img_id, pm.img_addr, pm.img_desc, pm.priority, pm.create_time FROM tb_product p LEFT JOIN tb_product_img pm ON p.product_id=pm.product_id WHERE p.product_id = ? ORDER BY pm.priority DESC 
2020-04-04 12:34:21.502 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductById - ==> Parameters: 10(Long)
2020-04-04 12:34:21.546 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductById - <==      Total: 2
2020-04-04 12:34:21.573 [main] DEBUG com.xyd.utils.ImageUtil - current realtiveAddr isupload\item\shop\2\2020-04-04-12-34-21-35798.jpg
2020-04-04 12:34:21.573 [main] DEBUG com.xyd.utils.ImageUtil - current completeAddr isC:\projectdev\image\upload\item\shop\2\2020-04-04-12-34-21-35798.jpg
2020-04-04 12:34:21.872 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductImgMapper.queryProductImgByProductId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 12:34:21.872 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 12:34:21.873 [main] DEBUG c.x.m.ProductImgMapper.queryProductImgByProductId - ==>  Preparing: SELECT pm.product_img_id, img_addr, img_desc, priority, create_time, product_id FROM tb_product_img pm WHERE pm.product_id=? 
2020-04-04 12:34:21.874 [main] DEBUG c.x.m.ProductImgMapper.queryProductImgByProductId - ==> Parameters: 10(Long)
2020-04-04 12:34:21.877 [main] DEBUG c.x.m.ProductImgMapper.queryProductImgByProductId - <==      Total: 2
2020-04-04 12:34:21.902 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductImgMapper.deleteProductImgByProductId] user[master] Stretegy,SqlCommanType[DELETE]..
2020-04-04 12:34:21.903 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-04 12:34:21.903 [main] DEBUG c.x.m.ProductImgMapper.deleteProductImgByProductId - ==>  Preparing: DELETE FROM tb_product_img WHERE product_id=? 
2020-04-04 12:34:21.904 [main] DEBUG c.x.m.ProductImgMapper.deleteProductImgByProductId - ==> Parameters: 10(Long)
2020-04-04 12:34:21.918 [main] DEBUG c.x.m.ProductImgMapper.deleteProductImgByProductId - <==    Updates: 2
2020-04-04 12:34:21.919 [main] DEBUG com.xyd.utils.ImageUtil - current realtiveAddr isupload\item\shop\2\2020-04-04-12-34-21-63810.jpg
2020-04-04 12:34:21.919 [main] DEBUG com.xyd.utils.ImageUtil - current completeAddr isC:\projectdev\image\upload\item\shop\2\2020-04-04-12-34-21-63810.jpg
2020-04-04 12:34:21.963 [main] DEBUG com.xyd.utils.ImageUtil - current realtiveAddr isupload\item\shop\2\2020-04-04-12-34-21-37559.jpg
2020-04-04 12:34:21.963 [main] DEBUG com.xyd.utils.ImageUtil - current completeAddr isC:\projectdev\image\upload\item\shop\2\2020-04-04-12-34-21-37559.jpg
2020-04-04 12:34:22.033 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductImgMapper.batchInsertProductImg] user[master] Stretegy,SqlCommanType[INSERT]..
2020-04-04 12:34:22.033 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-04 12:34:22.068 [main] DEBUG c.x.mapper.ProductImgMapper.batchInsertProductImg - ==>  Preparing: INSERT INTO tb_product_img(img_addr,img_desc,priority,create_time,product_id) VALUES ( ?, ?, ?, ?, ? ) , ( ?, ?, ?, ?, ? ) 
2020-04-04 12:34:22.077 [main] DEBUG c.x.mapper.ProductImgMapper.batchInsertProductImg - ==> Parameters: upload\item\shop\2\2020-04-04-12-34-21-63810.jpg(String), 商品号10的1号图片(String), 1(Integer), 2020-04-04 12:34:21.962(Timestamp), 10(Long), upload\item\shop\2\2020-04-04-12-34-21-37559.jpg(String), 商品号10的2号图片(String), 2(Integer), 2020-04-04 12:34:22.029(Timestamp), 10(Long)
2020-04-04 12:34:22.093 [main] DEBUG c.x.mapper.ProductImgMapper.batchInsertProductImg - <==    Updates: 2
2020-04-04 12:34:22.095 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.updateProduct] user[master] Stretegy,SqlCommanType[UPDATE]..
2020-04-04 12:34:22.095 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-04-04 12:34:22.120 [main] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==>  Preparing: UPDATE tb_product SET product_name=?, product_desc=?, img_addr=?, last_edit_time=?, product_category_id=? where product_id=? and shop_id=? 
2020-04-04 12:34:22.122 [main] DEBUG com.xyd.mapper.ProductMapper.updateProduct - ==> Parameters: 测试商品5(String), 测试商品5(String), upload\item\shop\2\2020-04-04-12-34-21-35798.jpg(String), 2020-04-04 12:34:21.197(Timestamp), 3(Long), 10(Long), 2(Long)
2020-04-04 12:34:22.132 [main] DEBUG com.xyd.mapper.ProductMapper.updateProduct - <==    Updates: 1
2020-04-04 18:01:30.828 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:01:30.831 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:01:30.872 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 ORDER BY priority DESC LIMIT ?,? 
2020-04-04 18:01:31.180 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2020-04-04 18:01:31.224 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-04 18:04:09.416 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:04:09.420 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:04:09.441 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 ORDER BY priority DESC LIMIT ?,? 
2020-04-04 18:04:09.874 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2020-04-04 18:04:09.968 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-04 18:04:09.985 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:04:09.985 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:04:09.986 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 and product_name like '%测试%' ORDER BY priority DESC LIMIT ?,? 
2020-04-04 18:04:09.987 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2020-04-04 18:04:09.995 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-04 18:06:36.679 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:06:36.681 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:06:36.698 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 ORDER BY priority DESC LIMIT ?,? 
2020-04-04 18:06:36.968 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2020-04-04 18:06:37.021 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-04 18:06:37.042 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:06:37.048 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:06:37.048 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and product_name like '%测试%' 
2020-04-04 18:06:37.049 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 
2020-04-04 18:06:37.052 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
2020-04-04 18:07:13.747 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductList] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:07:13.754 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:07:13.873 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==>  Preparing: SELECT product_id, product_name, product_desc, img_addr, normal_price, promotion_price, priority, create_time, last_edit_time, enable_status, product_category_id, shop_id FROM tb_product WHERE 1=1 ORDER BY priority DESC LIMIT ?,? 
2020-04-04 18:07:14.783 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - ==> Parameters: 0(Integer), 3(Integer)
2020-04-04 18:07:14.855 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductList - <==      Total: 3
2020-04-04 18:07:14.898 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductMapper.queryProductCount] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-04-04 18:07:14.898 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-04-04 18:07:14.901 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==>  Preparing: SELECT count(*) FROM tb_product WHERE 1=1 and product_name like '%测试%' 
2020-04-04 18:07:14.911 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - ==> Parameters: 
2020-04-04 18:07:14.917 [main] DEBUG com.xyd.mapper.ProductMapper.queryProductCount - <==      Total: 1
