2020-03-28 10:20:23.808 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-03-28 10:20:23.823 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-03-28 10:20:23.848 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-03-28 10:20:24.194 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-03-28 10:20:24.245 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 3
2020-03-28 10:35:37.746 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-03-28 10:35:37.749 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-03-28 10:35:37.780 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-03-28 10:35:38.178 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-03-28 10:35:38.240 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 3
2020-03-28 15:58:36.234 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.batchInsertProductCategory] user[master] Stretegy,SqlCommanType[INSERT]..
2020-03-28 15:58:36.238 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 15:58:36.379 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==>  Preparing: INSERT INTO tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-03-28 15:58:36.501 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==> Parameters: 商品类别2(String), 2(Integer), 2020-03-28 15:58:36.191(Timestamp), 2(Long), null, null, null, 0(Long)
2020-03-28 15:58:58.820 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.batchInsertProductCategory] user[master] Stretegy,SqlCommanType[INSERT]..
2020-03-28 15:58:58.822 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 15:58:58.881 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==>  Preparing: INSERT INTO tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-03-28 15:58:58.946 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==> Parameters: 商品类别2(String), 2(Integer), 2020-03-28 15:58:58.796(Timestamp), 2(Long), null, null, null, 0(Long)
2020-03-28 16:08:12.450 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.batchInsertProductCategory] user[master] Stretegy,SqlCommanType[INSERT]..
2020-03-28 16:08:12.458 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 16:08:12.721 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==>  Preparing: INSERT INTO tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-03-28 16:08:13.025 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==> Parameters: 商品类别2(String), 2(Integer), 2020-03-28 16:07:37.792(Timestamp), 2(Long), null, null, null, 0(Long)
2020-03-28 16:27:20.921 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.batchInsertProductCategory] user[master] Stretegy,SqlCommanType[INSERT]..
2020-03-28 16:27:20.924 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 16:27:21.016 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==>  Preparing: INSERT INTO tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-03-28 16:27:21.089 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==> Parameters: 商品类别2(String), 2(Integer), 2020-03-28 16:27:20.891(Timestamp), 2(Long), null, null, null, 0(Long)
2020-03-28 16:28:32.010 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.batchInsertProductCategory] user[master] Stretegy,SqlCommanType[INSERT]..
2020-03-28 16:28:32.015 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 16:28:32.073 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==>  Preparing: INSERT INTO tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-03-28 16:28:32.141 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==> Parameters: 商品类别1(String), 1(Integer), 2020-03-28 16:28:31.982(Timestamp), 2(Long), 商品类别2(String), 2(Integer), 2020-03-28 16:28:31.982(Timestamp), 2(Long)
2020-03-28 16:28:32.163 [main] DEBUG c.x.m.P.batchInsertProductCategory - <==    Updates: 2
2020-03-28 23:21:17.121 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.batchInsertProductCategory] user[master] Stretegy,SqlCommanType[INSERT]..
2020-03-28 23:21:17.123 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 23:21:17.203 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==>  Preparing: INSERT INTO tb_product_category(product_category_name,priority,create_time,shop_id) VALUES ( ?, ?, ?, ? ) , ( ?, ?, ?, ? ) 
2020-03-28 23:21:17.371 [main] DEBUG c.x.m.P.batchInsertProductCategory - ==> Parameters: 商品类别1(String), 1(Integer), 2020-03-28 23:21:17.102(Timestamp), 2(Long), 商品类别2(String), 2(Integer), 2020-03-28 23:21:17.102(Timestamp), 2(Long)
2020-03-28 23:21:17.387 [main] DEBUG c.x.m.P.batchInsertProductCategory - <==    Updates: 2
2020-03-28 23:21:17.432 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-03-28 23:21:17.433 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-03-28 23:21:17.435 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-03-28 23:21:17.535 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-03-28 23:21:17.559 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 9
2020-03-28 23:21:17.574 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.queryProductCategoryByShopId] user[slave] Stretegy,SqlCommanType[SELECT]..
2020-03-28 23:21:17.575 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:slave
2020-03-28 23:21:17.575 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==>  Preparing: select product_category_id,product_category_name,priority,create_time,shop_id from tb_product_category where shop_id=? order by priority desc 
2020-03-28 23:21:17.576 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - ==> Parameters: 2(Long)
2020-03-28 23:21:17.587 [main] DEBUG c.x.m.P.queryProductCategoryByShopId - <==      Total: 9
2020-03-28 23:21:17.588 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.deleteProductCategory] user[master] Stretegy,SqlCommanType[DELETE]..
2020-03-28 23:21:17.588 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 23:21:17.588 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==>  Preparing: DELETE FROM tb_product_category WHERE product_category_id=? AND shop_id=? 
2020-03-28 23:21:17.589 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==> Parameters: 13(Long), 2(Long)
2020-03-28 23:21:17.617 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - <==    Updates: 1
2020-03-28 23:21:17.618 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.deleteProductCategory] user[master] Stretegy,SqlCommanType[DELETE]..
2020-03-28 23:21:17.618 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 23:21:17.618 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==>  Preparing: DELETE FROM tb_product_category WHERE product_category_id=? AND shop_id=? 
2020-03-28 23:21:17.620 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==> Parameters: 17(Long), 2(Long)
2020-03-28 23:21:17.800 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - <==    Updates: 1
2020-03-28 23:21:17.801 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.deleteProductCategory] user[master] Stretegy,SqlCommanType[DELETE]..
2020-03-28 23:21:17.801 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 23:21:17.801 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==>  Preparing: DELETE FROM tb_product_category WHERE product_category_id=? AND shop_id=? 
2020-03-28 23:21:17.802 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==> Parameters: 12(Long), 2(Long)
2020-03-28 23:21:17.840 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - <==    Updates: 1
2020-03-28 23:21:17.842 [main] DEBUG com.xyd.split.DynamicDataSourceInterceptor - 设置方法[com.xyd.mapper.ProductCategoryMapper.deleteProductCategory] user[master] Stretegy,SqlCommanType[DELETE]..
2020-03-28 23:21:17.843 [main] DEBUG com.xyd.split.DynamicDataSourceHolder - 所使用的数据源为:master
2020-03-28 23:21:17.843 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==>  Preparing: DELETE FROM tb_product_category WHERE product_category_id=? AND shop_id=? 
2020-03-28 23:21:17.844 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - ==> Parameters: 16(Long), 2(Long)
2020-03-28 23:21:17.866 [main] DEBUG c.x.m.ProductCategoryMapper.deleteProductCategory - <==    Updates: 1
